/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use crate::indices;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardsSegment {
    #[serde(rename = "num_committed_segments")]
    pub num_committed_segments: u32,
    #[serde(rename = "segments")]
    pub segments: serde_json::Value,
    #[serde(rename = "num_search_segments")]
    pub num_search_segments: u32,
    #[serde(rename = "routing")]
    pub routing: indices::segments::ShardSegmentRouting,
}

impl ShardsSegment {
    
    pub fn new(num_committed_segments: u32, segments: serde_json::Value, num_search_segments: u32, routing: indices::segments::ShardSegmentRouting) -> ShardsSegment {
        ShardsSegment {
            num_committed_segments,
            segments,
            num_search_segments,
            routing,
        }
    }
}
