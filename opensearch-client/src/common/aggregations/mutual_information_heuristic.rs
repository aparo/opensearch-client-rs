/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MutualInformationHeuristic {  /// Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.
    #[serde(rename = "background_is_superset", default, skip_serializing_if = "Option::is_none")]
    pub background_is_superset: Option<bool>,  /// Set to `false` to filter out the terms that appear less often in the subset than in documents outside the subset.
    #[serde(rename = "include_negatives", default, skip_serializing_if = "Option::is_none")]
    pub include_negatives: Option<bool>,
}

impl MutualInformationHeuristic {
    
    pub fn new() -> MutualInformationHeuristic {
        MutualInformationHeuristic {
            background_is_superset: None,
            include_negatives: None,
        }
    }
}
