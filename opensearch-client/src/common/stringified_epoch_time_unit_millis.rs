/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum StringifiedEpochTimeUnitMillis {
    StringValue(String),
    EpochTimeUnitMillisValue(u64),
}
impl Default for StringifiedEpochTimeUnitMillis {
    fn default() -> Self {
        StringifiedEpochTimeUnitMillis::EpochTimeUnitMillisValue(0)
    }
}

impl std::fmt::Display for StringifiedEpochTimeUnitMillis {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            StringifiedEpochTimeUnitMillis::StringValue(s) => write!(f, "{}", s),
            StringifiedEpochTimeUnitMillis::EpochTimeUnitMillisValue(n) => write!(f, "{}", n),
        }
    }
}

impl StringifiedEpochTimeUnitMillis {
    pub fn as_str(&self) -> String {
        match self {
            StringifiedEpochTimeUnitMillis::StringValue(s) => s.clone(),
            StringifiedEpochTimeUnitMillis::EpochTimeUnitMillisValue(n) => n.to_string(),
        }
    }

    pub fn as_num(&self) -> Option<u64> {
        match self {
            StringifiedEpochTimeUnitMillis::EpochTimeUnitMillisValue(n) => Some(*n),
            _ => None,
        }
    }
}

impl From<u64> for StringifiedEpochTimeUnitMillis {
    fn from(n: u64) -> Self {
        StringifiedEpochTimeUnitMillis::EpochTimeUnitMillisValue(n)
    }
}

impl From<&str> for StringifiedEpochTimeUnitMillis {
    fn from(s: &str) -> Self {
        StringifiedEpochTimeUnitMillis::StringValue(s.to_string())
    }
}

impl From<String> for StringifiedEpochTimeUnitMillis {
    fn from(s: String) -> Self {
        StringifiedEpochTimeUnitMillis::StringValue(s)
    }
}
