/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecoveryStats {  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "throttle_time", default, skip_serializing_if = "Option::is_none")]
    pub throttle_time: Option<String>,
    #[serde(rename = "throttle_time_in_millis")]
    pub throttle_time_in_millis: String,
    #[serde(rename = "current_as_source")]
    pub current_as_source: u32,
    #[serde(rename = "current_as_target")]
    pub current_as_target: u32,
}

impl RecoveryStats {
    
    pub fn new(throttle_time_in_millis: String, current_as_source: u32, current_as_target: u32) -> RecoveryStats {
        RecoveryStats {
            throttle_time: None,
            throttle_time_in_millis,
            current_as_source,
            current_as_target,
        }
    }
}
