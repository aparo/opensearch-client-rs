/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateAction {  /// If the document does not already exist, the contents of `upsert` are inserted as a
  /// new document. If the document exists, the `script` is executed.
    #[serde(rename = "upsert", default, skip_serializing_if = "Option::is_none")]
    pub upsert: Option<serde_json::Value>,  /// Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.
    #[serde(rename = "_source", default, skip_serializing_if = "Option::is_none")]
    pub source: Option<core::search::SourceConfig>,  /// A partial update to an existing document.
    #[serde(rename = "doc", default, skip_serializing_if = "Option::is_none")]
    pub doc: Option<serde_json::Value>,  /// When `false` disables the setting `result` in the response
  /// to `noop` if no change to the document occurred.
    #[serde(rename = "detect_noop", default, skip_serializing_if = "Option::is_none")]
    pub detect_noop: Option<bool>,  /// When `true`, uses the contents of `doc` as the value of `upsert`.
    #[serde(rename = "doc_as_upsert", default, skip_serializing_if = "Option::is_none")]
    pub doc_as_upsert: Option<bool>,  /// When `true`, executes the script whether or not the document exists.
    #[serde(rename = "scripted_upsert", default, skip_serializing_if = "Option::is_none")]
    pub scripted_upsert: Option<bool>,
    #[serde(rename = "script", default, skip_serializing_if = "Option::is_none")]
    pub script: Option<common::Script>,
}

impl UpdateAction {
    
    pub fn new() -> UpdateAction {
        UpdateAction {
            upsert: None,
            source: None,
            doc: None,
            detect_noop: None,
            doc_as_upsert: None,
            scripted_upsert: None,
            script: None,
        }
    }
}
