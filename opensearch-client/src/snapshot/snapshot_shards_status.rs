/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::snapshot;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SnapshotShardsStatus {
    #[serde(rename = "node", default, skip_serializing_if = "Option::is_none")]
    pub node: Option<String>,
    #[serde(rename = "reason", default, skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(rename = "stats")]
    pub stats: snapshot::SnapshotShardsStatsSummary,
    #[serde(rename = "stage")]
    pub stage: snapshot::SnapshotShardsStatsStage,
}

impl SnapshotShardsStatus {
    
    pub fn new(stats: snapshot::SnapshotShardsStatsSummary, stage: snapshot::SnapshotShardsStatsStage) -> SnapshotShardsStatus {
        SnapshotShardsStatus {
            node: None,
            reason: None,
            stats,
            stage,
        }
    }
}
