/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexSettingsAnalysis {
    #[serde(rename = "analyzer", default, skip_serializing_if = "Option::is_none")]
    pub analyzer: Option<serde_json::Value>,
    #[serde(
        rename = "char_filter",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub char_filter: Option<serde_json::Value>,
    #[serde(rename = "tokenizer", default, skip_serializing_if = "Option::is_none")]
    pub tokenizer: Option<serde_json::Value>,
    #[serde(
        rename = "normalizer",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub normalizer: Option<serde_json::Value>,
    #[serde(rename = "filter", default, skip_serializing_if = "Option::is_none")]
    pub filter: Option<serde_json::Value>,
}

impl IndexSettingsAnalysis {
    pub fn new() -> IndexSettingsAnalysis {
        IndexSettingsAnalysis {
            analyzer: None,
            char_filter: None,
            tokenizer: None,
            normalizer: None,
            filter: None,
        }
    }
}
