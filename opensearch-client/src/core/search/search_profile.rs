/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchProfile {
    #[serde(rename = "query")]
    pub query: Vec<core::search::QueryProfile>,
    #[serde(rename = "rewrite_time")]
    pub rewrite_time: u32,
    #[serde(rename = "collector")]
    pub collector: Vec<core::search::Collector>,
}

impl SearchProfile {
    
    pub fn new(query: Vec<core::search::QueryProfile>, rewrite_time: u32, collector: Vec<core::search::Collector>) -> SearchProfile {
        SearchProfile {
            query,
            rewrite_time,
            collector,
        }
    }
}
