/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FailedIndex {
    #[serde(rename = "index_uuid", default, skip_serializing_if = "Option::is_none")]
    pub index_uuid: Option<String>,
    #[serde(rename = "reason", default, skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(rename = "index_name", default, skip_serializing_if = "Option::is_none")]
    pub index_name: Option<String>,
}

impl FailedIndex {
    
    pub fn new() -> FailedIndex {
        FailedIndex {
            index_uuid: None,
            reason: None,
            index_name: None,
        }
    }
}
