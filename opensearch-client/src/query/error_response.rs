/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::query;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorResponse {
    #[serde(rename = "error", default, skip_serializing_if = "Option::is_none")]
    pub error: Option<query::Error>,
    #[serde(rename = "status", default, skip_serializing_if = "Option::is_none")]
    pub status: Option<f64>,
}

impl ErrorResponse {
    
    pub fn new() -> ErrorResponse {
        ErrorResponse {
            error: None,
            status: None,
        }
    }
}
