/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardIndexingPressurePerShardIndexingStats {
    #[serde(rename = "primary_time_in_millis")]
    pub primary_time_in_millis: String,
    #[serde(rename = "replica_count")]
    pub replica_count: u32,
    #[serde(rename = "replica_time_in_millis")]
    pub replica_time_in_millis: String,
    #[serde(rename = "coordinating_time_in_millis")]
    pub coordinating_time_in_millis: String,
    #[serde(rename = "coordinating_count")]
    pub coordinating_count: u32,
    #[serde(rename = "primary_count")]
    pub primary_count: u32,
}

impl ShardIndexingPressurePerShardIndexingStats {
    
    pub fn new(primary_time_in_millis: String, replica_count: u32, replica_time_in_millis: String, coordinating_time_in_millis: String, coordinating_count: u32, primary_count: u32) -> ShardIndexingPressurePerShardIndexingStats {
        ShardIndexingPressurePerShardIndexingStats {
            primary_time_in_millis,
            replica_count,
            replica_time_in_millis,
            coordinating_time_in_millis,
            coordinating_count,
            primary_count,
        }
    }
}
