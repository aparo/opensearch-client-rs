/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SuggesterBase {
    #[serde(rename = "field")]
    pub field: String,
    #[serde(rename = "size", default, skip_serializing_if = "Option::is_none")]
    pub size: Option<u32>,
    #[serde(rename = "analyzer", default, skip_serializing_if = "Option::is_none")]
    pub analyzer: Option<String>,
}

impl SuggesterBase {
    
    pub fn new(field: String) -> SuggesterBase {
        SuggesterBase {
            field,
            size: None,
            analyzer: None,
        }
    }
}
