/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use crate::indices;
use serde::{Deserialize, Serialize};

/// CreateRequestBodyJson
/// The configuration for the index (`settings` and `mappings`)

#[derive(Clone, Default, Debug, Serialize, Deserialize)]
pub struct CreateRequestBodyJson {
    #[serde(rename = "mappings", default, skip_serializing_if = "Option::is_none")]
    pub mappings: Option<common::mapping::TypeMapping>,
    /// Aliases for the index.
    #[serde(rename = "aliases", default, skip_serializing_if = "Option::is_none")]
    pub aliases: Option<serde_json::Value>,
    /// The index settings to be updated.
    #[serde(rename = "settings", default, skip_serializing_if = "Option::is_none")]
    pub settings: Option<indices::IndexSettings>,
}

impl CreateRequestBodyJson {
    /// The configuration for the index (`settings` and `mappings`)
    pub fn new() -> CreateRequestBodyJson {
        CreateRequestBodyJson {
            mappings: None,
            aliases: None,
            settings: None,
        }
    }
}
