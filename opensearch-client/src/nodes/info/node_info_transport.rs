/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeInfoTransport {
    #[serde(rename = "bound_address")]
    pub bound_address: Vec<String>,
    #[serde(rename = "publish_address")]
    pub publish_address: String,
    #[serde(rename = "profiles")]
    pub profiles: serde_json::Value,
}

impl NodeInfoTransport {
    
    pub fn new(bound_address: Vec<String>, publish_address: String, profiles: serde_json::Value) -> NodeInfoTransport {
        NodeInfoTransport {
            bound_address,
            publish_address,
            profiles,
        }
    }
}
