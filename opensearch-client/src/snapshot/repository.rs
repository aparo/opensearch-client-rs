/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::snapshot;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Repository {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "uuid", default, skip_serializing_if = "Option::is_none")]
    pub uuid: Option<String>,
    #[serde(rename = "settings")]
    pub settings: snapshot::RepositorySettings,
}

impl Repository {
    
    pub fn new(r#type: String, settings: snapshot::RepositorySettings) -> Repository {
        Repository {
            r#type,
            uuid: None,
            settings,
        }
    }
}
