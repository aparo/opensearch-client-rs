/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransientPlain {
    #[serde(rename = "plugins.sql.cursor.keep_alive", default, skip_serializing_if = "Option::is_none")]
    pub plugins_sql_cursor_keep_alive: Option<String>,
    #[serde(rename = "plugins.ppl.enabled", default, skip_serializing_if = "Option::is_none")]
    pub plugins_ppl_enabled: Option<bool>,
    #[serde(rename = "plugins.query.memory_limit", default, skip_serializing_if = "Option::is_none")]
    pub plugins_query_memory_limit: Option<String>,
    #[serde(rename = "plugins.query.size_limit", default, skip_serializing_if = "Option::is_none")]
    pub plugins_query_size_limit: Option<u32>,
    #[serde(rename = "plugins.sql.enabled", default, skip_serializing_if = "Option::is_none")]
    pub plugins_sql_enabled: Option<bool>,
    #[serde(rename = "plugins.sql.slowlog", default, skip_serializing_if = "Option::is_none")]
    pub plugins_sql_slowlog: Option<u32>,
}

impl TransientPlain {
    
    pub fn new() -> TransientPlain {
        TransientPlain {
            plugins_sql_cursor_keep_alive: None,
            plugins_ppl_enabled: None,
            plugins_query_memory_limit: None,
            plugins_query_size_limit: None,
            plugins_sql_enabled: None,
            plugins_sql_slowlog: None,
        }
    }
}
