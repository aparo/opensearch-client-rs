/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardResourceUsageStatsDetail {
    #[serde(rename = "io_usage_stats", default, skip_serializing_if = "Option::is_none")]
    pub io_usage_stats: Option<nodes::stats::ShardResourceUsageStatsIoUsageStats>,
    #[serde(rename = "memory_utilization_percent", default, skip_serializing_if = "Option::is_none")]
    pub memory_utilization_percent: Option<String>,
    #[serde(rename = "timestamp", default, skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "cpu_utilization_percent", default, skip_serializing_if = "Option::is_none")]
    pub cpu_utilization_percent: Option<String>,
}

impl ShardResourceUsageStatsDetail {
    
    pub fn new() -> ShardResourceUsageStatsDetail {
        ShardResourceUsageStatsDetail {
            io_usage_stats: None,
            memory_utilization_percent: None,
            timestamp: None,
            cpu_utilization_percent: None,
        }
    }
}
