/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HoltWintersModelSettings {
    #[serde(rename = "period", default, skip_serializing_if = "Option::is_none")]
    pub period: Option<u32>,
    #[serde(rename = "type", default, skip_serializing_if = "Option::is_none")]
    pub r#type: Option<common::aggregations::HoltWintersType>,
    #[serde(rename = "pad", default, skip_serializing_if = "Option::is_none")]
    pub pad: Option<bool>,
    #[serde(rename = "gamma", default, skip_serializing_if = "Option::is_none")]
    pub gamma: Option<f64>,
    #[serde(rename = "alpha", default, skip_serializing_if = "Option::is_none")]
    pub alpha: Option<f64>,
    #[serde(rename = "beta", default, skip_serializing_if = "Option::is_none")]
    pub beta: Option<f64>,
}

impl HoltWintersModelSettings {
    
    pub fn new() -> HoltWintersModelSettings {
        HoltWintersModelSettings {
            period: None,
            r#type: None,
            pad: None,
            gamma: None,
            alpha: None,
            beta: None,
        }
    }
}
