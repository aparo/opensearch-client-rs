/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardStore {
    #[serde(
        rename = "allocation_id",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub allocation_id: Option<String>,
    #[serde(rename = "allocation")]
    pub allocation: String,
    #[serde(
        rename = "store_exception",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub store_exception: Option<indices::shard_stores::ShardStoreException>,
}

impl ShardStore {
    pub fn new(allocation: String) -> ShardStore {
        ShardStore {
            allocation_id: None,
            allocation,
            store_exception: None,
        }
    }
}
