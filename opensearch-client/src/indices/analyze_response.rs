/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyzeResponse {
    #[serde(rename = "detail", default, skip_serializing_if = "Option::is_none")]
    pub detail: Option<indices::analyze::AnalyzeDetail>,
    #[serde(rename = "tokens", default, skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<indices::analyze::AnalyzeToken>>,
}

impl AnalyzeResponse {
    pub fn new() -> AnalyzeResponse {
        AnalyzeResponse {
            detail: None,
            tokens: None,
        }
    }
}
