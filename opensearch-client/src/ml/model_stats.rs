/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModelStats {  /// The executing task count.
    #[serde(rename = "ml_executing_task_count", default, skip_serializing_if = "Option::is_none")]
    pub ml_executing_task_count: Option<u32>,  /// The request count.
    #[serde(rename = "ml_action_request_count", default, skip_serializing_if = "Option::is_none")]
    pub ml_action_request_count: Option<u32>,  /// The failure count.
    #[serde(rename = "ml_action_failure_count", default, skip_serializing_if = "Option::is_none")]
    pub ml_action_failure_count: Option<u32>,
}

impl ModelStats {
    
    pub fn new() -> ModelStats {
        ModelStats {
            ml_executing_task_count: None,
            ml_action_request_count: None,
            ml_action_failure_count: None,
        }
    }
}
