/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::transforms;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteTransformsResponse {
    #[serde(rename = "took", default, skip_serializing_if = "Option::is_none")]
    pub took: Option<u32>,
    #[serde(rename = "errors", default, skip_serializing_if = "Option::is_none")]
    pub errors: Option<bool>,
    #[serde(rename = "items", default, skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<transforms::DeleteTransformResponseItem>>,
}

impl DeleteTransformsResponse {
    
    pub fn new() -> DeleteTransformsResponse {
        DeleteTransformsResponse {
            took: None,
            errors: None,
            items: None,
        }
    }
}
