/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Collector {
    #[serde(rename = "children", default, skip_serializing_if = "Option::is_none")]
    pub children: Option<Vec<core::search::Collector>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "time_in_nanos")]
    pub time_in_nanos: String,
}

impl Collector {
    
    pub fn new(name: String, reason: String, time_in_nanos: String) -> Collector {
        Collector {
            children: None,
            name,
            reason,
            time_in_nanos,
        }
    }
}
