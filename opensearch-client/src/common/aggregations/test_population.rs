/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TestPopulation {  /// The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
    #[serde(rename = "field")]
    pub field: String,
    #[serde(rename = "filter", default, skip_serializing_if = "Option::is_none")]
    pub filter: Option<crate::dsl::Query>,
    #[serde(rename = "script", default, skip_serializing_if = "Option::is_none")]
    pub script: Option<common::Script>,
}

impl TestPopulation {
    
    pub fn new(field: String) -> TestPopulation {
        TestPopulation {
            field,
            filter: None,
            script: None,
        }
    }
}
