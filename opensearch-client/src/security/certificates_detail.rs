/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CertificatesDetail {
    #[serde(rename = "not_before", default, skip_serializing_if = "Option::is_none")]
    pub not_before: Option<String>,
    #[serde(rename = "issuer_dn", default, skip_serializing_if = "Option::is_none")]
    pub issuer_dn: Option<String>,
    #[serde(rename = "subject_dn", default, skip_serializing_if = "Option::is_none")]
    pub subject_dn: Option<String>,
    #[serde(rename = "not_after", default, skip_serializing_if = "Option::is_none")]
    pub not_after: Option<String>,
    #[serde(rename = "san", default, skip_serializing_if = "Option::is_none")]
    pub san: Option<String>,
}

impl CertificatesDetail {
    
    pub fn new() -> CertificatesDetail {
        CertificatesDetail {
            not_before: None,
            issuer_dn: None,
            subject_dn: None,
            not_after: None,
            san: None,
        }
    }
}
