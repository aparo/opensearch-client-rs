/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchShardsWithIndexResponse {
    #[serde(rename = "shards")]
    pub shards: Vec<Vec<common::NodeShard>>,
    #[serde(rename = "indices")]
    pub indices: serde_json::Value,
    #[serde(rename = "nodes")]
    pub nodes: serde_json::Value,
}

impl SearchShardsWithIndexResponse {
    
    pub fn new(shards: Vec<Vec<common::NodeShard>>, indices: serde_json::Value, nodes: serde_json::Value) -> SearchShardsWithIndexResponse {
        SearchShardsWithIndexResponse {
            shards,
            indices,
            nodes,
        }
    }
}
