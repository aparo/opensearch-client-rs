/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SoftDeletes {
    /// Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
    /// this behavior while keeping the semantics of the field type.
    ///
    /// Depending on the target language, code generators can keep the union or remove it and leniently parse
    /// strings to the target type.
    #[serde(rename = "enabled", default, skip_serializing_if = "Option::is_none")]
    pub enabled: Option<common::StringifiedBoolean>,
    #[serde(rename = "retention", default, skip_serializing_if = "Option::is_none")]
    pub retention: Option<indices::SoftDeletesRetention>,
    #[serde(
        rename = "retention_lease",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub retention_lease: Option<indices::RetentionLease>,
}

impl SoftDeletes {
    pub fn new() -> SoftDeletes {
        SoftDeletes {
            enabled: None,
            retention: None,
            retention_lease: None,
        }
    }
}
