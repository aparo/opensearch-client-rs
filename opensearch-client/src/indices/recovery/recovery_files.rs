/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::indices;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RecoveryFiles {
    #[serde(rename = "recovered")]
    pub recovered: u32,
    #[serde(rename = "reused")]
    pub reused: u32,
    #[serde(rename = "total")]
    pub total: u32,
    #[serde(rename = "details", default, skip_serializing_if = "Option::is_none")]
    pub details: Option<Vec<indices::recovery::FileDetails>>,
    #[serde(rename = "percent")]
    pub percent: String,
}

impl RecoveryFiles {
    
    pub fn new(recovered: u32, reused: u32, total: u32, percent: String) -> RecoveryFiles {
        RecoveryFiles {
            recovered,
            reused,
            total,
            details: None,
            percent,
        }
    }
}
