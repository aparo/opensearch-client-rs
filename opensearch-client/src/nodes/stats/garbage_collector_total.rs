/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GarbageCollectorTotal {
    #[serde(rename = "collection_time_in_millis", default, skip_serializing_if = "Option::is_none")]
    pub collection_time_in_millis: Option<String>,  /// Total number of JVM garbage collectors that collect objects.
    #[serde(rename = "collection_count", default, skip_serializing_if = "Option::is_none")]
    pub collection_count: Option<u32>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "collection_time", default, skip_serializing_if = "Option::is_none")]
    pub collection_time: Option<String>,
}

impl GarbageCollectorTotal {
    
    pub fn new() -> GarbageCollectorTotal {
        GarbageCollectorTotal {
            collection_time_in_millis: None,
            collection_count: None,
            collection_time: None,
        }
    }
}
