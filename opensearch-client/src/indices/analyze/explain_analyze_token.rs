/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExplainAnalyzeToken {
    #[serde(rename = "bytes")]
    pub bytes: String,
    #[serde(rename = "end_offset")]
    pub end_offset: u32,
    #[serde(rename = "termFrequency")]
    pub term_frequency: u32,
    #[serde(rename = "position")]
    pub position: u32,
    #[serde(rename = "positionLength")]
    pub position_length: u32,
    #[serde(rename = "keyword", default, skip_serializing_if = "Option::is_none")]
    pub keyword: Option<bool>,
    #[serde(rename = "token")]
    pub token: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "start_offset")]
    pub start_offset: u32,
}

impl ExplainAnalyzeToken {
    pub fn new(
        bytes: String,
        end_offset: u32,
        term_frequency: u32,
        position: u32,
        position_length: u32,
        token: String,
        r#type: String,
        start_offset: u32,
    ) -> ExplainAnalyzeToken {
        ExplainAnalyzeToken {
            bytes,
            end_offset,
            term_frequency,
            position,
            position_length,
            keyword: None,
            token,
            r#type,
            start_offset,
        }
    }
}
