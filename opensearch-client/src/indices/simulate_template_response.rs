/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, Serialize, Deserialize)]
pub struct SimulateTemplateResponse {
    #[serde(
        rename = "overlapping",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub overlapping: Option<Vec<indices::simulate_template::Overlapping>>,
    #[serde(rename = "template")]
    pub template: indices::simulate_template::Template,
}

impl SimulateTemplateResponse {
    pub fn new(template: indices::simulate_template::Template) -> SimulateTemplateResponse {
        SimulateTemplateResponse {
            overlapping: None,
            template,
        }
    }
}
