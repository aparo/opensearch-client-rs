/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SuggestFuzziness {
    #[serde(rename = "min_length")]
    pub min_length: u32,
    #[serde(rename = "prefix_length")]
    pub prefix_length: u32,
    #[serde(rename = "unicode_aware")]
    pub unicode_aware: bool,
    #[serde(rename = "transpositions")]
    pub transpositions: bool,
    #[serde(rename = "fuzziness")]
    pub fuzziness: String,
}

impl SuggestFuzziness {
    
    pub fn new(min_length: u32, prefix_length: u32, unicode_aware: bool, transpositions: bool, fuzziness: String) -> SuggestFuzziness {
        SuggestFuzziness {
            min_length,
            prefix_length,
            unicode_aware,
            transpositions,
            fuzziness,
        }
    }
}
