/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexSettingsMergeTieredPolicy {
    #[serde(
        rename = "deletes_pct_allowed",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub deletes_pct_allowed: Option<common::StringifiedDouble>,
    /// Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
    /// this behavior while keeping the semantics of the field type.
    ///
    /// Depending on the target language, code generators can keep the union or remove it and leniently parse
    /// strings to the target type.
    #[serde(
        rename = "max_merge_at_once",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub max_merge_at_once: Option<common::StringifiedInteger>,
    #[serde(
        rename = "max_merged_segment",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub max_merged_segment: Option<String>,
    #[serde(
        rename = "segments_per_tier",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub segments_per_tier: Option<common::StringifiedDouble>,
    #[serde(
        rename = "floor_segment",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub floor_segment: Option<String>,
    #[serde(
        rename = "reclaim_deletes_weight",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub reclaim_deletes_weight: Option<common::StringifiedDouble>,
    #[serde(
        rename = "expunge_deletes_allowed",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub expunge_deletes_allowed: Option<common::StringifiedDouble>,
}

impl IndexSettingsMergeTieredPolicy {
    pub fn new() -> IndexSettingsMergeTieredPolicy {
        IndexSettingsMergeTieredPolicy {
            deletes_pct_allowed: None,
            max_merge_at_once: None,
            max_merged_segment: None,
            segments_per_tier: None,
            floor_segment: None,
            reclaim_deletes_weight: None,
            expunge_deletes_allowed: None,
        }
    }
}
