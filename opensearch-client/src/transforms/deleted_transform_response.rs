/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeletedTransformResponse {
    #[serde(rename = "_seq_no")]
    pub seq_no: u32,
    #[serde(rename = "_shards")]
    pub shards: common::ShardStatistics,
    #[serde(rename = "_index")]
    pub index: String,
    #[serde(rename = "_id")]
    pub id: String,
    #[serde(rename = "_primary_term")]
    pub primary_term: u32,
    #[serde(rename = "_version")]
    pub version: u32,
    #[serde(rename = "forced_refresh")]
    pub forced_refresh: bool,
    #[serde(rename = "result")]
    pub result: String,
    #[serde(rename = "status")]
    pub status: f64,
}

impl DeletedTransformResponse {
    
    pub fn new(seq_no: u32, shards: common::ShardStatistics, index: String, id: String, primary_term: u32, version: u32, forced_refresh: bool, result: String, status: f64) -> DeletedTransformResponse {
        DeletedTransformResponse {
            seq_no,
            shards,
            index,
            id,
            primary_term,
            version,
            forced_refresh,
            result,
            status,
        }
    }
}
