/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};

/// Mtermvectors
/// Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.


#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mtermvectors {  /// Array of existing or artificial documents.
    #[serde(rename = "docs", default, skip_serializing_if = "Option::is_none")]
    pub docs: Option<Vec<core::mtermvectors::Operation>>,  /// Simplified syntax to specify documents by their ID if they're in the same index.
    #[serde(rename = "ids", default, skip_serializing_if = "Option::is_none")]
    pub ids: Option<Vec<String>>,
}

impl Mtermvectors {
      /// Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.
    pub fn new() -> Mtermvectors {
        Mtermvectors {
            docs: None,
            ids: None,
        }
    }
}
