/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompositeAggregationSource {
    #[serde(rename = "date_histogram", default, skip_serializing_if = "Option::is_none")]
    pub date_histogram: Option<String>,
    #[serde(rename = "histogram", default, skip_serializing_if = "Option::is_none")]
    pub histogram: Option<String>,
    #[serde(rename = "geotile_grid", default, skip_serializing_if = "Option::is_none")]
    pub geotile_grid: Option<String>,
    #[serde(rename = "terms", default, skip_serializing_if = "Option::is_none")]
    pub terms: Option<String>,
}

impl CompositeAggregationSource {
    
    pub fn new() -> CompositeAggregationSource {
        CompositeAggregationSource {
            date_histogram: None,
            histogram: None,
            geotile_grid: None,
            terms: None,
        }
    }
}
