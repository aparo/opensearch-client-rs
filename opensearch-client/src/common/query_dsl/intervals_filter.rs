/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IntervalsFilter {
    #[serde(rename = "not_containing", default, skip_serializing_if = "Option::is_none")]
    pub not_containing: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "after", default, skip_serializing_if = "Option::is_none")]
    pub after: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "overlapping", default, skip_serializing_if = "Option::is_none")]
    pub overlapping: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "contained_by", default, skip_serializing_if = "Option::is_none")]
    pub contained_by: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "before", default, skip_serializing_if = "Option::is_none")]
    pub before: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "containing", default, skip_serializing_if = "Option::is_none")]
    pub containing: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "script", default, skip_serializing_if = "Option::is_none")]
    pub script: Option<common::Script>,
    #[serde(rename = "not_contained_by", default, skip_serializing_if = "Option::is_none")]
    pub not_contained_by: Option<common::query_dsl::IntervalsContainer>,
    #[serde(rename = "not_overlapping", default, skip_serializing_if = "Option::is_none")]
    pub not_overlapping: Option<common::query_dsl::IntervalsContainer>,
}

impl IntervalsFilter {
    
    pub fn new() -> IntervalsFilter {
        IntervalsFilter {
            not_containing: None,
            after: None,
            overlapping: None,
            contained_by: None,
            before: None,
            containing: None,
            script: None,
            not_contained_by: None,
            not_overlapping: None,
        }
    }
}
