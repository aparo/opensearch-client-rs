/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateActionGroup {
    #[serde(rename = "allowed_actions", default, skip_serializing_if = "Option::is_none")]
    pub allowed_actions: Option<Vec<String>>,
    #[serde(rename = "description", default, skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "hidden", default, skip_serializing_if = "Option::is_none")]
    pub hidden: Option<bool>,
    #[serde(rename = "static", default, skip_serializing_if = "Option::is_none")]
    pub r#static: Option<bool>,
    #[serde(rename = "reserved", default, skip_serializing_if = "Option::is_none")]
    pub reserved: Option<bool>,
    #[serde(rename = "type", default, skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl CreateActionGroup {
    
    pub fn new() -> CreateActionGroup {
        CreateActionGroup {
            allowed_actions: None,
            description: None,
            hidden: None,
            r#static: None,
            reserved: None,
            r#type: None,
        }
    }
}
