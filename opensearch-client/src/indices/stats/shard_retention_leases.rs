/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardRetentionLeases {
    #[serde(rename = "primary_term")]
    pub primary_term: u32,
    #[serde(rename = "version")]
    pub version: u32,
    #[serde(rename = "leases")]
    pub leases: Vec<indices::stats::ShardLease>,
}

impl ShardRetentionLeases {
    pub fn new(
        primary_term: u32,
        version: u32,
        leases: Vec<indices::stats::ShardLease>,
    ) -> ShardRetentionLeases {
        ShardRetentionLeases {
            primary_term,
            version,
            leases,
        }
    }
}
