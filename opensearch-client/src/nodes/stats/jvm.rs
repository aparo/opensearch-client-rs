/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Jvm {
    #[serde(rename = "threads", default, skip_serializing_if = "Option::is_none")]
    pub threads: Option<nodes::stats::JvmThreads>,
    #[serde(rename = "uptime_in_millis", default, skip_serializing_if = "Option::is_none")]
    pub uptime_in_millis: Option<String>,
    #[serde(rename = "mem", default, skip_serializing_if = "Option::is_none")]
    pub mem: Option<nodes::stats::JvmMemoryStats>,  /// Contains statistics about JVM buffer pools for the node.
    #[serde(rename = "buffer_pools", default, skip_serializing_if = "Option::is_none")]
    pub buffer_pools: Option<serde_json::Value>,
    #[serde(rename = "gc", default, skip_serializing_if = "Option::is_none")]
    pub gc: Option<nodes::stats::GarbageCollector>,
    #[serde(rename = "classes", default, skip_serializing_if = "Option::is_none")]
    pub classes: Option<nodes::stats::JvmClasses>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "uptime", default, skip_serializing_if = "Option::is_none")]
    pub uptime: Option<String>,
    #[serde(rename = "timestamp", default, skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
}

impl Jvm {
    
    pub fn new() -> Jvm {
        Jvm {
            threads: None,
            uptime_in_millis: None,
            mem: None,
            buffer_pools: None,
            gc: None,
            classes: None,
            uptime: None,
            timestamp: None,
        }
    }
}
