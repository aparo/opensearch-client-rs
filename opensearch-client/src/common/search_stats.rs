/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchStats {  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "point_in_time_time", default, skip_serializing_if = "Option::is_none")]
    pub point_in_time_time: Option<String>,  /// The number of currently running shard fetch operations.
    #[serde(rename = "fetch_current")]
    pub fetch_current: u32,
    #[serde(rename = "groups", default, skip_serializing_if = "Option::is_none")]
    pub groups: Option<serde_json::Value>,  /// The number of currently running shard suggest operations.
    #[serde(rename = "suggest_current")]
    pub suggest_current: u32,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "fetch_time", default, skip_serializing_if = "Option::is_none")]
    pub fetch_time: Option<String>,
    #[serde(rename = "scroll_time_in_millis")]
    pub scroll_time_in_millis: String,  /// The total number of shard fetch operations.
    #[serde(rename = "fetch_total")]
    pub fetch_total: u32,
    #[serde(rename = "query_time_in_millis")]
    pub query_time_in_millis: String,  /// The average slice count of all search requests. This is computed as the total slice count divided by the total number of concurrent search requests.
    #[serde(rename = "concurrent_avg_slice_count", default, skip_serializing_if = "Option::is_none")]
    pub concurrent_avg_slice_count: Option<u32>,  /// The number of currently running shard query operations.
    #[serde(rename = "query_current")]
    pub query_current: u32,  /// The total number of query operations using concurrent segment search.
    #[serde(rename = "concurrent_query_total", default, skip_serializing_if = "Option::is_none")]
    pub concurrent_query_total: Option<u32>,  /// The number of currently running query operations using concurrent segment search.
    #[serde(rename = "concurrent_query_current", default, skip_serializing_if = "Option::is_none")]
    pub concurrent_query_current: Option<u32>,
    #[serde(rename = "fetch_time_in_millis")]
    pub fetch_time_in_millis: String,  /// The number of shard scroll operations that are currently running.
    #[serde(rename = "scroll_current")]
    pub scroll_current: u32,
    #[serde(rename = "suggest_time_in_millis")]
    pub suggest_time_in_millis: String,  /// The number of open search contexts.
    #[serde(rename = "open_contexts", default, skip_serializing_if = "Option::is_none")]
    pub open_contexts: Option<u32>,  /// The total number of shard Point in Time (PIT) contexts created (completed and active) since the node last restarted.
    #[serde(rename = "point_in_time_total", default, skip_serializing_if = "Option::is_none")]
    pub point_in_time_total: Option<u32>,
    #[serde(rename = "search_idle_reactivate_count_total", default, skip_serializing_if = "Option::is_none")]
    pub search_idle_reactivate_count_total: Option<u32>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "suggest_time", default, skip_serializing_if = "Option::is_none")]
    pub suggest_time: Option<String>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "query_time", default, skip_serializing_if = "Option::is_none")]
    pub query_time: Option<String>,  /// The total number of shard suggest operations.
    #[serde(rename = "suggest_total")]
    pub suggest_total: u32,
    #[serde(rename = "concurrent_query_time_in_millis", default, skip_serializing_if = "Option::is_none")]
    pub concurrent_query_time_in_millis: Option<String>,  /// Statistics related to coordinator search operations for the node.
    #[serde(rename = "request", default, skip_serializing_if = "Option::is_none")]
    pub request: Option<serde_json::Value>,
    #[serde(rename = "point_in_time_time_in_millis", default, skip_serializing_if = "Option::is_none")]
    pub point_in_time_time_in_millis: Option<String>,  /// The total number of shard query operations.
    #[serde(rename = "query_total")]
    pub query_total: u32,  /// The number of currently open shard PIT contexts.
    #[serde(rename = "point_in_time_current", default, skip_serializing_if = "Option::is_none")]
    pub point_in_time_current: Option<u32>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "concurrent_query_time", default, skip_serializing_if = "Option::is_none")]
    pub concurrent_query_time: Option<String>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "scroll_time", default, skip_serializing_if = "Option::is_none")]
    pub scroll_time: Option<String>,  /// The total number of shard scroll operations.
    #[serde(rename = "scroll_total")]
    pub scroll_total: u32,
}

impl SearchStats {
    
    pub fn new(fetch_current: u32, suggest_current: u32, scroll_time_in_millis: String, fetch_total: u32, query_time_in_millis: String, query_current: u32, fetch_time_in_millis: String, scroll_current: u32, suggest_time_in_millis: String, suggest_total: u32, query_total: u32, scroll_total: u32) -> SearchStats {
        SearchStats {
            point_in_time_time: None,
            fetch_current,
            groups: None,
            suggest_current,
            fetch_time: None,
            scroll_time_in_millis,
            fetch_total,
            query_time_in_millis,
            concurrent_avg_slice_count: None,
            query_current,
            concurrent_query_total: None,
            concurrent_query_current: None,
            fetch_time_in_millis,
            scroll_current,
            suggest_time_in_millis,
            open_contexts: None,
            point_in_time_total: None,
            search_idle_reactivate_count_total: None,
            suggest_time: None,
            query_time: None,
            suggest_total,
            concurrent_query_time_in_millis: None,
            request: None,
            point_in_time_time_in_millis: None,
            query_total,
            point_in_time_current: None,
            concurrent_query_time: None,
            scroll_time: None,
            scroll_total,
        }
    }
}
