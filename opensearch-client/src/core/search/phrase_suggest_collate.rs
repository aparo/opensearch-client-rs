/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use crate::core;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PhraseSuggestCollate {
    #[serde(rename = "params", default, skip_serializing_if = "Option::is_none")]
    pub params: Option<serde_json::Value>,
    #[serde(rename = "prune", default, skip_serializing_if = "Option::is_none")]
    pub prune: Option<bool>,
    #[serde(rename = "query")]
    pub query: core::search::PhraseSuggestCollateQuery,
}

impl PhraseSuggestCollate {
    
    pub fn new(query: core::search::PhraseSuggestCollateQuery) -> PhraseSuggestCollate {
        PhraseSuggestCollate {
            params: None,
            prune: None,
            query,
        }
    }
}
