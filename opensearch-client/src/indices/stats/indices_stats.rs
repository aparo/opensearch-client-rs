/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndicesStats {
    #[serde(rename = "shards", default, skip_serializing_if = "Option::is_none")]
    pub shards: Option<serde_json::Value>,
    #[serde(rename = "primaries")]
    pub primaries: String,
    #[serde(rename = "total")]
    pub total: String,
    #[serde(rename = "uuid")]
    pub uuid: String,
}

impl IndicesStats {
    pub fn new(primaries: String, total: String, uuid: String) -> IndicesStats {
        IndicesStats {
            shards: None,
            primaries,
            total,
            uuid,
        }
    }
}
