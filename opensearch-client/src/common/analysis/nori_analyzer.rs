/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NoriAnalyzer {
    #[serde(rename = "version", default, skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "stoptags", default, skip_serializing_if = "Option::is_none")]
    pub stoptags: Option<Vec<String>>,
    #[serde(rename = "decompound_mode", default, skip_serializing_if = "Option::is_none")]
    pub decompound_mode: Option<String>,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "user_dictionary", default, skip_serializing_if = "Option::is_none")]
    pub user_dictionary: Option<String>,
}

impl NoriAnalyzer {
    
    pub fn new(r#type: String) -> NoriAnalyzer {
        NoriAnalyzer {
            version: None,
            stoptags: None,
            decompound_mode: None,
            r#type,
            user_dictionary: None,
        }
    }
}
