/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CgroupCpuStats {
    #[serde(rename = "cfs_period_micros", default, skip_serializing_if = "Option::is_none")]
    pub cfs_period_micros: Option<String>,
    #[serde(rename = "stat", default, skip_serializing_if = "Option::is_none")]
    pub stat: Option<nodes::stats::CgroupCpuStat>,
    #[serde(rename = "cfs_quota_micros", default, skip_serializing_if = "Option::is_none")]
    pub cfs_quota_micros: Option<String>,  /// The `cpu` control group to which the OpenSearch process belongs.
    #[serde(rename = "control_group", default, skip_serializing_if = "Option::is_none")]
    pub control_group: Option<String>,
}

impl CgroupCpuStats {
    
    pub fn new() -> CgroupCpuStats {
        CgroupCpuStats {
            cfs_period_micros: None,
            stat: None,
            cfs_quota_micros: None,
            control_group: None,
        }
    }
}
