/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HealthResponseBody {
    #[serde(rename = "active_shards_percent", default, skip_serializing_if = "Option::is_none")]
    pub active_shards_percent: Option<String>,  /// True if the cluster-manager node has been discovered.
    #[serde(rename = "discovered_master", default, skip_serializing_if = "Option::is_none")]
    pub discovered_master: Option<bool>,  /// The number of active primary shards.
    #[serde(rename = "active_primary_shards")]
    pub active_primary_shards: u32,
    #[serde(rename = "active_shards_percent_as_number")]
    pub active_shards_percent_as_number: f64,
    #[serde(rename = "indices", default, skip_serializing_if = "Option::is_none")]
    pub indices: Option<serde_json::Value>,  /// The total number of active primary and replica shards.
    #[serde(rename = "active_shards")]
    pub active_shards: u32,  /// True if the cluster-manager node has been discovered.
    #[serde(rename = "discovered_cluster_manager", default, skip_serializing_if = "Option::is_none")]
    pub discovered_cluster_manager: Option<bool>,  /// If `false` the response returned within the period of time that is specified by the timeout parameter (`30s` by default).
    #[serde(rename = "timed_out")]
    pub timed_out: bool,
    #[serde(rename = "task_max_waiting_in_queue_millis")]
    pub task_max_waiting_in_queue_millis: String,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "task_max_waiting_in_queue", default, skip_serializing_if = "Option::is_none")]
    pub task_max_waiting_in_queue: Option<String>,  /// The number of nodes within the cluster.
    #[serde(rename = "number_of_nodes")]
    pub number_of_nodes: u32,
    #[serde(rename = "cluster_name")]
    pub cluster_name: String,  /// The number of shards that are under initialization.
    #[serde(rename = "initializing_shards")]
    pub initializing_shards: u32,  /// The number of unfinished fetches.
    #[serde(rename = "number_of_in_flight_fetch")]
    pub number_of_in_flight_fetch: u32,
    #[serde(rename = "status")]
    pub status: common::HealthStatus,  /// The number of nodes that are dedicated data nodes.
    #[serde(rename = "number_of_data_nodes")]
    pub number_of_data_nodes: u32,  /// The number of cluster-level changes that have not yet been executed.
    #[serde(rename = "number_of_pending_tasks")]
    pub number_of_pending_tasks: u32,  /// The number of shards that are under relocation.
    #[serde(rename = "relocating_shards")]
    pub relocating_shards: u32,  /// The number of shards whose allocation has been delayed by the timeout settings.
    #[serde(rename = "delayed_unassigned_shards")]
    pub delayed_unassigned_shards: u32,  /// The number of shards that are not allocated.
    #[serde(rename = "unassigned_shards")]
    pub unassigned_shards: u32,
}

impl HealthResponseBody {
    
    pub fn new(active_primary_shards: u32, active_shards_percent_as_number: f64, active_shards: u32, timed_out: bool, task_max_waiting_in_queue_millis: String, number_of_nodes: u32, cluster_name: String, initializing_shards: u32, number_of_in_flight_fetch: u32, status: common::HealthStatus, number_of_data_nodes: u32, number_of_pending_tasks: u32, relocating_shards: u32, delayed_unassigned_shards: u32, unassigned_shards: u32) -> HealthResponseBody {
        HealthResponseBody {
            active_shards_percent: None,
            discovered_master: None,
            active_primary_shards,
            active_shards_percent_as_number,
            indices: None,
            active_shards,
            discovered_cluster_manager: None,
            timed_out,
            task_max_waiting_in_queue_millis,
            task_max_waiting_in_queue: None,
            number_of_nodes,
            cluster_name,
            initializing_shards,
            number_of_in_flight_fetch,
            status,
            number_of_data_nodes,
            number_of_pending_tasks,
            relocating_shards,
            delayed_unassigned_shards,
            unassigned_shards,
        }
    }
}
