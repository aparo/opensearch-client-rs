/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

pub type OpenResponse = serde_json::Value;
pub type DocumentDeleteResponse = serde_json::Value;

pub type StorageType = String;

pub mod alias;
use std::collections::HashMap;

pub use self::alias::Alias;

pub mod alias_definition;
pub use self::alias_definition::AliasDefinition;

pub mod data_stream;
pub use self::data_stream::DataStream;

pub mod data_stream_index;
pub use self::data_stream_index::DataStreamIndex;

pub mod data_stream_stats;
pub use self::data_stream_stats::DataStreamStats;

pub mod data_stream_timestamp_field;
pub use self::data_stream_timestamp_field::DataStreamTimestampField;

pub mod fielddata_frequency_filter;
pub use self::fielddata_frequency_filter::FielddataFrequencyFilter;

pub mod index_error;
pub use self::index_error::IndexError;

pub mod index_error_cause;
pub use self::index_error_cause::IndexErrorCause;

pub mod index_get_upgrade_status;
pub use self::index_get_upgrade_status::IndexGetUpgradeStatus;

pub mod index_routing;
pub use self::index_routing::IndexRouting;

pub mod index_routing_allocation;
pub use self::index_routing_allocation::IndexRoutingAllocation;

pub mod index_routing_allocation_disk;
pub use self::index_routing_allocation_disk::IndexRoutingAllocationDisk;

pub mod index_routing_allocation_include;
pub use self::index_routing_allocation_include::IndexRoutingAllocationInclude;

pub mod index_routing_allocation_initial_recovery;
pub use self::index_routing_allocation_initial_recovery::IndexRoutingAllocationInitialRecovery;

pub mod index_routing_rebalance;
pub use self::index_routing_rebalance::IndexRoutingRebalance;

pub mod index_segment_sort;
pub use self::index_segment_sort::IndexSegmentSort;

pub mod index_setting_blocks;
pub use self::index_setting_blocks::IndexSettingBlocks;

pub mod index_settings;
pub use self::index_settings::IndexSettings;

pub mod index_settings_analysis;
pub use self::index_settings_analysis::IndexSettingsAnalysis;

pub mod index_settings_analyze;
pub use self::index_settings_analyze::IndexSettingsAnalyze;

pub mod index_settings_highlight;
pub use self::index_settings_highlight::IndexSettingsHighlight;

pub mod index_settings_indexing;
pub use self::index_settings_indexing::IndexSettingsIndexing;

pub mod index_settings_lifecycle;
pub use self::index_settings_lifecycle::IndexSettingsLifecycle;

pub mod index_settings_lifecycle_step;
pub use self::index_settings_lifecycle_step::IndexSettingsLifecycleStep;

pub mod index_settings_mapping;
pub use self::index_settings_mapping::IndexSettingsMapping;

pub mod index_settings_mapping_limit_depth;
pub use self::index_settings_mapping_limit_depth::IndexSettingsMappingLimitDepth;

pub mod index_settings_mapping_limit_dimension_fields;
pub use self::index_settings_mapping_limit_dimension_fields::IndexSettingsMappingLimitDimensionFields;

pub mod index_settings_mapping_limit_field_name_length;
pub use self::index_settings_mapping_limit_field_name_length::IndexSettingsMappingLimitFieldNameLength;

pub mod index_settings_mapping_limit_nested_fields;
pub use self::index_settings_mapping_limit_nested_fields::IndexSettingsMappingLimitNestedFields;

pub mod index_settings_mapping_limit_nested_objects;
pub use self::index_settings_mapping_limit_nested_objects::IndexSettingsMappingLimitNestedObjects;

pub mod index_settings_mapping_limit_total_fields;
pub use self::index_settings_mapping_limit_total_fields::IndexSettingsMappingLimitTotalFields;

pub mod index_settings_merge;
pub use self::index_settings_merge::IndexSettingsMerge;

pub mod index_settings_merge_log_byte_size_policy;
pub use self::index_settings_merge_log_byte_size_policy::IndexSettingsMergeLogByteSizePolicy;

pub mod index_settings_merge_scheduler;
pub use self::index_settings_merge_scheduler::IndexSettingsMergeScheduler;

pub mod index_settings_merge_tiered_policy;
pub use self::index_settings_merge_tiered_policy::IndexSettingsMergeTieredPolicy;

pub mod index_settings_merge_tiered_policy_value;
pub use self::index_settings_merge_tiered_policy_value::IndexSettingsMergeTieredPolicyValue;

pub mod index_settings_queries;
pub use self::index_settings_queries::IndexSettingsQueries;

pub mod index_settings_queries_cache;
pub use self::index_settings_queries_cache::IndexSettingsQueriesCache;

pub mod index_settings_query_string;
pub use self::index_settings_query_string::IndexSettingsQueryString;

pub mod index_settings_search;
pub use self::index_settings_search::IndexSettingsSearch;

pub mod index_settings_search_concurrent;
pub use self::index_settings_search_concurrent::IndexSettingsSearchConcurrent;

pub mod index_settings_search_concurrent_segment_search;
pub use self::index_settings_search_concurrent_segment_search::IndexSettingsSearchConcurrentSegmentSearch;

pub mod index_settings_similarity;
pub use self::index_settings_similarity::IndexSettingsSimilarity;

pub mod index_settings_similarity_bm_25;
pub use self::index_settings_similarity_bm_25::IndexSettingsSimilarityBm25;

pub mod index_settings_similarity_dfi;
pub use self::index_settings_similarity_dfi::IndexSettingsSimilarityDfi;

pub mod index_settings_similarity_dfr;
pub use self::index_settings_similarity_dfr::IndexSettingsSimilarityDfr;

pub mod index_settings_similarity_ib;
pub use self::index_settings_similarity_ib::IndexSettingsSimilarityIb;

pub mod index_settings_similarity_lmd;
pub use self::index_settings_similarity_lmd::IndexSettingsSimilarityLmd;

pub mod index_settings_similarity_lmj;
pub use self::index_settings_similarity_lmj::IndexSettingsSimilarityLmj;

pub mod index_settings_similarity_scripted_tfidf;
pub use self::index_settings_similarity_scripted_tfidf::IndexSettingsSimilarityScriptedTfidf;

pub mod index_settings_star_tree;
pub use self::index_settings_star_tree::IndexSettingsStarTree;

pub mod index_settings_star_tree_default;
pub use self::index_settings_star_tree_default::IndexSettingsStarTreeDefault;

pub mod index_settings_star_tree_field;
pub use self::index_settings_star_tree_field::IndexSettingsStarTreeField;

pub mod index_settings_star_tree_field_default;
pub use self::index_settings_star_tree_field_default::IndexSettingsStarTreeFieldDefault;

pub mod index_settings_store;
pub use self::index_settings_store::IndexSettingsStore;

pub mod index_settings_store_fs;
pub use self::index_settings_store_fs::IndexSettingsStoreFs;

pub mod index_settings_store_hybrid;
pub use self::index_settings_store_hybrid::IndexSettingsStoreHybrid;

pub mod index_settings_store_hybrid_mmap;
pub use self::index_settings_store_hybrid_mmap::IndexSettingsStoreHybridMmap;

pub mod index_settings_store_hybrid_nio;
pub use self::index_settings_store_hybrid_nio::IndexSettingsStoreHybridNio;

pub mod index_state;
pub use self::index_state::IndexState;

pub mod index_template;
pub use self::index_template::IndexTemplate;

pub mod index_template_data_stream_configuration;
pub use self::index_template_data_stream_configuration::IndexTemplateDataStreamConfiguration;

pub mod index_template_summary;
pub use self::index_template_summary::IndexTemplateSummary;

pub mod index_versioning;
pub use self::index_versioning::IndexVersioning;

pub mod indexing_pressure;
pub use self::indexing_pressure::IndexingPressure;

pub mod indexing_pressure_memory;
pub use self::indexing_pressure_memory::IndexingPressureMemory;

pub mod indexing_slowlog;
pub use self::indexing_slowlog::IndexingSlowlog;

pub mod indexing_slowlog_thresholds;
pub use self::indexing_slowlog_thresholds::IndexingSlowlogThresholds;

pub mod numeric_fielddata;
pub use self::numeric_fielddata::NumericFielddata;

pub mod retention_lease;
pub use self::retention_lease::RetentionLease;

pub mod search_idle;
pub use self::search_idle::SearchIdle;

pub mod search_slowlog;
pub use self::search_slowlog::SearchSlowlog;

pub mod search_slowlog_thresholds;
pub use self::search_slowlog_thresholds::SearchSlowlogThresholds;

pub mod slowlog_threshold_levels;
pub use self::slowlog_threshold_levels::SlowlogThresholdLevels;

pub mod soft_deletes;
pub use self::soft_deletes::SoftDeletes;

pub mod soft_deletes_retention;
pub use self::soft_deletes_retention::SoftDeletesRetention;

pub mod template_mapping;
pub use self::template_mapping::TemplateMapping;

pub mod translog;
pub use self::translog::Translog;

pub mod translog_retention;
pub use self::translog_retention::TranslogRetention;

pub mod upgrade_status;
pub use self::upgrade_status::UpgradeStatus;

pub mod upgrade_version_status;
pub use self::upgrade_version_status::UpgradeVersionStatus;

pub mod index_settings_merge_policy;
pub use self::index_settings_merge_policy::IndexSettingsMergePolicy;

pub mod add_block;
pub mod analyze;
pub mod close;
pub mod get_alias;
pub mod get_field_mapping;
pub mod get_index_template;
pub mod get_mapping;
pub mod put_index_template;

pub use put_index_template::IndexTemplateMapping;
pub use put_index_template::PutIndexTemplate;

pub mod rollover;
pub use rollover::Rollover;

pub mod recovery;
pub mod resolve_index;
pub mod segments;
pub mod shard_stores;
pub mod simulate_template;
pub mod stats;
pub mod update_aliases;

pub mod split_request_body_json;
pub use self::split_request_body_json::SplitRequestBodyJson;

pub mod update_aliases_request_body_json;
pub use self::update_aliases_request_body_json::UpdateAliasesRequestBodyJson;

pub mod get_alias_response;
pub use self::get_alias_response::GetAliasResponse;

pub mod put_mapping_request_body_json;
pub use self::put_mapping_request_body_json::PutMappingRequestBodyJson;

pub mod stats_response;
pub use self::stats_response::StatsResponse;

pub mod put_alias_request_body_json;
pub use self::put_alias_request_body_json::PutAliasRequestBodyJson;

pub mod get_template_response;
pub use self::get_template_response::GetTemplateResponse;

pub mod shrink_request_body_json;
pub use self::shrink_request_body_json::ShrinkRequestBodyJson;

pub mod rollover_request_body_json;
pub use self::rollover_request_body_json::RolloverRequestBodyJson;

pub mod shrink;
pub use self::shrink::Shrink;

pub mod recovery_response;
pub use self::recovery_response::RecoveryResponse;

pub mod put_mapping;
pub use self::put_mapping::PutMapping;

pub mod clone_request_body_json;
pub use self::clone_request_body_json::CloneRequestBodyJson;

pub mod analyze_request_body_json;
pub use self::analyze_request_body_json::AnalyzeRequestBodyJson;

pub mod analyze_response;
pub use self::analyze_response::AnalyzeResponse;

pub mod simulate_template_response;
pub use self::simulate_template_response::SimulateTemplateResponse;

pub mod create_response;
pub use self::create_response::CreateResponse;

pub mod segments_response;
pub use self::segments_response::SegmentsResponse;

pub mod validate_query_request_body_json;
pub use self::validate_query_request_body_json::ValidateQueryRequestBodyJson;

pub mod validate_query_response;
pub use self::validate_query_response::ValidateQueryResponse;

pub mod put_template;
pub use self::put_template::PutTemplate;

pub mod get_data_stream_response;
pub use self::get_data_stream_response::GetDataStreamResponse;

pub mod data_streams_stats_response;
pub use self::data_streams_stats_response::DataStreamsStatsResponse;

pub mod create_data_stream;
pub use self::create_data_stream::CreateDataStream;

pub mod simulate_index_template_response;
pub use self::simulate_index_template_response::SimulateIndexTemplateResponse;

pub mod split;
pub use self::split::Split;

pub mod resolve_index_response;
pub use self::resolve_index_response::ResolveIndexResponse;

pub mod create_data_stream_request_body_json;
pub use self::create_data_stream_request_body_json::CreateDataStreamRequestBodyJson;

pub mod shard_stores_response;
pub use self::shard_stores_response::ShardStoresResponse;

pub mod clone;
pub use self::clone::Clone;

pub mod simulate_index_template;
pub use self::simulate_index_template::SimulateIndexTemplate;

pub mod put_template_request_body_json;
pub use self::put_template_request_body_json::PutTemplateRequestBodyJson;

pub mod simulate_index_template_request_body_json;
pub use self::simulate_index_template_request_body_json::SimulateIndexTemplateRequestBodyJson;

pub mod create_request_body_json;
pub use self::create_request_body_json::CreateRequestBodyJson;

pub mod get_field_mapping_response;
pub use self::get_field_mapping_response::GetFieldMappingResponse;

pub mod put_settings;
pub use self::put_settings::PutSettings;

pub mod get_index_template_response;
pub use self::get_index_template_response::GetIndexTemplateResponse;

pub mod put_index_template_request_body_json;
pub use self::put_index_template_request_body_json::PutIndexTemplateRequestBodyJson;

pub mod get_mapping_response;
pub use self::get_mapping_response::GetMappingResponse;

pub mod get_settings_response;
pub use self::get_settings_response::GetSettingsResponse;

mod validate_query;
pub use update_aliases::UpdateAliases;
pub use validate_query::ValidateQuery;
mod put_alias;
pub use analyze::Analyze;
pub use put_alias::PutAlias;
pub use simulate_template::SimulateTemplate;

pub type GetResponse = HashMap<String, IndexTemplateMapping>;

mod indices_api;
pub use indices_api::IndicesApiClient;
