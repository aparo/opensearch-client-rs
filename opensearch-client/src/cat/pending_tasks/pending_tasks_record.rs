/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PendingTasksRecord {  /// The task priority.
    #[serde(rename = "priority", default, skip_serializing_if = "Option::is_none")]
    pub priority: Option<String>,  /// Indicates how long the task has been in queue.
    #[serde(rename = "timeInQueue", default, skip_serializing_if = "Option::is_none")]
    pub time_in_queue: Option<String>,  /// The task insertion order.
    #[serde(rename = "insertOrder", default, skip_serializing_if = "Option::is_none")]
    pub insert_order: Option<String>,  /// The task source.
    #[serde(rename = "source", default, skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
}

impl PendingTasksRecord {
    
    pub fn new() -> PendingTasksRecord {
        PendingTasksRecord {
            priority: None,
            time_in_queue: None,
            insert_order: None,
            source: None,
        }
    }
}
