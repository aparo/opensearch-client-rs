/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::cluster;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeDiskUsage {
    #[serde(rename = "least_available")]
    pub least_available: cluster::allocation_explain::DiskUsage,
    #[serde(rename = "node_name")]
    pub node_name: String,
    #[serde(rename = "most_available")]
    pub most_available: cluster::allocation_explain::DiskUsage,
}

impl NodeDiskUsage {
    
    pub fn new(least_available: cluster::allocation_explain::DiskUsage, node_name: String, most_available: cluster::allocation_explain::DiskUsage) -> NodeDiskUsage {
        NodeDiskUsage {
            least_available,
            node_name,
            most_available,
        }
    }
}
