/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardIndexingPressurePerShardMemoryStatsDetails {
    #[serde(rename = "replica_in_bytes")]
    pub replica_in_bytes: u32,
    #[serde(rename = "coordinating_in_bytes")]
    pub coordinating_in_bytes: u32,
    #[serde(rename = "coordinating", default, skip_serializing_if = "Option::is_none")]
    pub coordinating: Option<String>,
    #[serde(rename = "primary", default, skip_serializing_if = "Option::is_none")]
    pub primary: Option<String>,
    #[serde(rename = "primary_in_bytes")]
    pub primary_in_bytes: u32,
    #[serde(rename = "replica", default, skip_serializing_if = "Option::is_none")]
    pub replica: Option<String>,
}

impl ShardIndexingPressurePerShardMemoryStatsDetails {
    
    pub fn new(replica_in_bytes: u32, coordinating_in_bytes: u32, primary_in_bytes: u32) -> ShardIndexingPressurePerShardMemoryStatsDetails {
        ShardIndexingPressurePerShardMemoryStatsDetails {
            replica_in_bytes,
            coordinating_in_bytes,
            coordinating: None,
            primary: None,
            primary_in_bytes,
            replica: None,
        }
    }
}
