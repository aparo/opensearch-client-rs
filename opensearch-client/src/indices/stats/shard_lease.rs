/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardLease {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "timestamp")]
    pub timestamp: u32,
    #[serde(rename = "source")]
    pub source: String,
    #[serde(rename = "retaining_seq_no")]
    pub retaining_seq_no: u32,
}

impl ShardLease {
    pub fn new(id: String, timestamp: u32, source: String, retaining_seq_no: u32) -> ShardLease {
        ShardLease {
            id,
            timestamp,
            source,
            retaining_seq_no,
        }
    }
}
