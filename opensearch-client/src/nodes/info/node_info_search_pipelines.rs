/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeInfoSearchPipelines {
    #[serde(rename = "response_processors", default, skip_serializing_if = "Option::is_none")]
    pub response_processors: Option<Vec<nodes::info::NodeInfoIngestProcessor>>,
    #[serde(rename = "request_processors", default, skip_serializing_if = "Option::is_none")]
    pub request_processors: Option<Vec<nodes::info::NodeInfoIngestProcessor>>,
}

impl NodeInfoSearchPipelines {
    
    pub fn new() -> NodeInfoSearchPipelines {
        NodeInfoSearchPipelines {
            response_processors: None,
            request_processors: None,
        }
    }
}
