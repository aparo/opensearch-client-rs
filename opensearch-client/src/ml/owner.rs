/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Owner {
    #[serde(rename = "name")]
    pub name: String,  /// The custom attribute names.
    #[serde(rename = "custom_attribute_names", default, skip_serializing_if = "Option::is_none")]
    pub custom_attribute_names: Option<Vec<String>>,  /// The backend roles.
    #[serde(rename = "backend_roles", default, skip_serializing_if = "Option::is_none")]
    pub backend_roles: Option<Vec<String>>,  /// The roles.
    #[serde(rename = "roles", default, skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<String>>,
}

impl Owner {
    
    pub fn new(name: String) -> Owner {
        Owner {
            name,
            custom_attribute_names: None,
            backend_roles: None,
            roles: None,
        }
    }
}
