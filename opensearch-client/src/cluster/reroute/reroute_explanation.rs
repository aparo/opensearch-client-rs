/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::cluster;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RerouteExplanation {
    #[serde(rename = "parameters")]
    pub parameters: cluster::reroute::RerouteParameters,
    #[serde(rename = "decisions")]
    pub decisions: Vec<cluster::reroute::RerouteDecision>,
    #[serde(rename = "command")]
    pub command: String,
}

impl RerouteExplanation {
    
    pub fn new(parameters: cluster::reroute::RerouteParameters, decisions: Vec<cluster::reroute::RerouteDecision>, command: String) -> RerouteExplanation {
        RerouteExplanation {
            parameters,
            decisions,
            command,
        }
    }
}
