/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeInfoPath {
    #[serde(rename = "data", default, skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<String>>,
    #[serde(rename = "repo", default, skip_serializing_if = "Option::is_none")]
    pub repo: Option<Vec<String>>,
    #[serde(rename = "home")]
    pub home: String,
    #[serde(rename = "logs")]
    pub logs: String,
}

impl NodeInfoPath {
    
    pub fn new(home: String, logs: String) -> NodeInfoPath {
        NodeInfoPath {
            data: None,
            repo: None,
            home,
            logs,
        }
    }
}
