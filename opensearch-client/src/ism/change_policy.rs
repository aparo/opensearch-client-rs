/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::ism;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChangePolicy {
    #[serde(rename = "policy_id")]
    pub policy_id: String,
    #[serde(rename = "include", default, skip_serializing_if = "Option::is_none")]
    pub include: Option<Vec<ism::IncludeState>>,
    #[serde(rename = "state", default, skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
}

impl ChangePolicy {
    
    pub fn new(policy_id: String) -> ChangePolicy {
        ChangePolicy {
            policy_id,
            include: None,
            state: None,
        }
    }
}
