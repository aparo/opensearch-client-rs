/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NumericDecayPlacement {
    #[serde(rename = "scale", default, skip_serializing_if = "Option::is_none")]
    pub scale: Option<f64>,
    #[serde(rename = "offset", default, skip_serializing_if = "Option::is_none")]
    pub offset: Option<f64>,
    #[serde(rename = "decay", default, skip_serializing_if = "Option::is_none")]
    pub decay: Option<f64>,
    #[serde(rename = "origin", default, skip_serializing_if = "Option::is_none")]
    pub origin: Option<f64>,
}

impl NumericDecayPlacement {
    
    pub fn new() -> NumericDecayPlacement {
        NumericDecayPlacement {
            scale: None,
            offset: None,
            decay: None,
            origin: None,
        }
    }
}
