/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DiskUsage {
    #[serde(rename = "total_bytes")]
    pub total_bytes: u32,
    #[serde(rename = "free_disk_percent")]
    pub free_disk_percent: f64,
    #[serde(rename = "free_bytes")]
    pub free_bytes: u32,
    #[serde(rename = "path")]
    pub path: String,
    #[serde(rename = "total", default, skip_serializing_if = "Option::is_none")]
    pub total: Option<String>,
    #[serde(rename = "used_bytes")]
    pub used_bytes: u32,
    #[serde(rename = "used", default, skip_serializing_if = "Option::is_none")]
    pub used: Option<String>,
    #[serde(rename = "used_disk_percent")]
    pub used_disk_percent: f64,
    #[serde(rename = "free", default, skip_serializing_if = "Option::is_none")]
    pub free: Option<String>,
}

impl DiskUsage {
    
    pub fn new(total_bytes: u32, free_disk_percent: f64, free_bytes: u32, path: String, used_bytes: u32, used_disk_percent: f64) -> DiskUsage {
        DiskUsage {
            total_bytes,
            free_disk_percent,
            free_bytes,
            path,
            total: None,
            used_bytes,
            used: None,
            used_disk_percent,
            free: None,
        }
    }
}
