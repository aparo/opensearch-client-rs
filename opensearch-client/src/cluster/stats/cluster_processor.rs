/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterProcessor {
    #[serde(rename = "count")]
    pub count: u32,
    #[serde(rename = "time_in_millis")]
    pub time_in_millis: String,
    #[serde(rename = "failed")]
    pub failed: u32,
    #[serde(rename = "current")]
    pub current: u32,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "time", default, skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
}

impl ClusterProcessor {
    
    pub fn new(count: u32, time_in_millis: String, failed: u32, current: u32) -> ClusterProcessor {
        ClusterProcessor {
            count,
            time_in_millis,
            failed,
            current,
            time: None,
        }
    }
}
