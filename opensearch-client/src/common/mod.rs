/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */
pub mod cluster;

pub type IndicesResponseBase = serde_json::Value;

// generic types
mod string_or_string_array;
pub use self::string_or_string_array::StringOrStringArray;

mod stringified_boolean;
pub use self::stringified_boolean::StringifiedBoolean;

mod stringified_double;
pub use self::stringified_double::StringifiedDouble;

mod stringified_epoch_time_unit_millis;
pub use self::stringified_epoch_time_unit_millis::StringifiedEpochTimeUnitMillis;

mod stringified_epoch_time_unit_seconds;
pub use self::stringified_epoch_time_unit_seconds::StringifiedEpochTimeUnitSeconds;

mod stringified_integer;
pub use self::stringified_integer::StringifiedInteger;

mod stringified_long;
pub use self::stringified_long::StringifiedLong;

mod stringified_version_number;
pub use self::stringified_version_number::StringifiedVersionNumber;

mod typed_or_json;
pub use self::typed_or_json::TypedOrJson;

mod typed_or_list;
pub use self::typed_or_list::TypedOrList;
// Custom types

// TODO: implement a custom type for these
pub type BulkByScrollResponseBaseValue = serde_json::Value;

// typed managed types
pub type DeleteByQueryOKJson = TypedOrJson<BulkByScrollResponseBaseValue>;
pub type ReindexOKJson = TypedOrJson<BulkByScrollResponseBaseValue>;
pub type UpdateByQueryOKJson = TypedOrJson<BulkByScrollResponseBaseValue>;
pub type SortOptionsValue = TypedOrJson<String>;
// pub type SortOptionsValue = TypedOrJson<SortOptions>;

pub type Sort = TypedOrList<SortOptionsValue>;

// Common strings
pub type Time = String;
pub type TimeUnit = String;
pub type ScriptLanguage = String;
pub type WaitForStatus = String;

pub type Fuzziness = String;
pub type Health = String;
pub type HealthStatus = String;

pub type MinimumShouldMatch = StringifiedInteger;
pub type Slices = StringifiedInteger;

pub type MultiTermQueryRewrite = String;
pub type NodeRole = String;
pub type SearchType = String;

pub type Bytes = StringifiedLong;

pub type Refresh = StringifiedBoolean;

pub type DateTime = StringifiedEpochTimeUnitMillis;

pub type Actions = StringOrStringArray;
pub type Groups = StringOrStringArray;
pub type CompletionFields = StringOrStringArray;
pub type DocvalueFields = StringOrStringArray;
pub type Fields = StringOrStringArray;
pub type FielddataFields = StringOrStringArray;
pub type StoredFields = StringOrStringArray;
pub type FilterPath = StringOrStringArray;
pub type Index = StringOrStringArray;
pub type Ids = StringOrStringArray;
pub type Indices = StringOrStringArray;
pub type ExpandWildcards = StringOrStringArray;
pub type NodeIds = StringOrStringArray;
pub type NodeNames = StringOrStringArray;
pub type Names = StringOrStringArray;
pub type Routing = StringOrStringArray;
pub type Repository = StringOrStringArray;
pub type SourceExcludes = StringOrStringArray;
pub type SourceIncludes = StringOrStringArray;
pub type ScrollIds = StringOrStringArray;
pub type RoutingInQueryString = StringOrStringArray;
pub type Metric = StringOrStringArray;
pub type Status = StringOrStringArray;

// generic types
pub mod acknowledged_response_base;
pub use self::acknowledged_response_base::AcknowledgedResponseBase;

pub mod base_node;
pub use self::base_node::BaseNode;

pub mod bulk_by_scroll_task_status;
pub use self::bulk_by_scroll_task_status::BulkByScrollTaskStatus;

pub mod bulk_by_scroll_task_status_value;
pub use self::bulk_by_scroll_task_status_value::BulkByScrollTaskStatusValue;

pub mod cluster_details;
pub use self::cluster_details::ClusterDetails;

pub mod cluster_statistics;
pub use self::cluster_statistics::ClusterStatistics;

pub mod completion_stats;
pub use self::completion_stats::CompletionStats;

pub mod coords_geo_bounds;
pub use self::coords_geo_bounds::CoordsGeoBounds;

pub mod doc_stats;
pub use self::doc_stats::DocStats;

pub mod doc_status;
pub use self::doc_status::DocStatus;

pub mod error_cause;
pub use self::error_cause::ErrorCause;

pub mod error_cause_value;
pub use self::error_cause_value::ErrorCauseValue;

pub mod error_response_base;
pub use self::error_response_base::ErrorResponseBase;

pub mod error_response_base_value;
pub use self::error_response_base_value::ErrorResponseBaseValue;

pub mod field_memory_usage;
pub use self::field_memory_usage::FieldMemoryUsage;

pub mod field_size_usage;
pub use self::field_size_usage::FieldSizeUsage;

pub mod fielddata_stats;
pub use self::fielddata_stats::FielddataStats;

pub mod flush_stats;
pub use self::flush_stats::FlushStats;

pub mod geo_distance_sort;
pub use self::geo_distance_sort::GeoDistanceSort;

pub mod geo_hash_location;
pub use self::geo_hash_location::GeoHashLocation;

pub mod geo_line;
pub use self::geo_line::GeoLine;

pub mod get_stats;
pub use self::get_stats::GetStats;

pub mod http_headers;
pub use self::http_headers::HttpHeaders;

pub mod indexing_stats;
pub use self::indexing_stats::IndexingStats;

pub mod inline_get;
pub use self::inline_get::InlineGet;

pub mod inline_get_dict_user_defined;
pub use self::inline_get_dict_user_defined::InlineGetDictUserDefined;

pub mod inline_script;
pub use self::inline_script::InlineScript;
pub type Script = InlineScript;

pub mod lat_lon_geo_location;
pub use self::lat_lon_geo_location::LatLonGeoLocation;

pub mod merges_stats;
pub use self::merges_stats::MergesStats;

pub mod metadata;
pub use self::metadata::Metadata;

pub mod nested_sort_value;
pub use self::nested_sort_value::NestedSortValue;

pub mod node_attributes;
pub use self::node_attributes::NodeAttributes;

pub mod node_shard;
pub use self::node_shard::NodeShard;

pub mod node_statistics;
pub use self::node_statistics::NodeStatistics;

pub mod object_value;
pub use self::object_value::ObjectValue;

pub mod open_search_version_info;
pub use self::open_search_version_info::OpenSearchVersionInfo;

pub mod plugin_stats;
pub use self::plugin_stats::PluginStats;

pub mod query_cache_stats;
pub use self::query_cache_stats::QueryCacheStats;

pub mod rank_base;
pub use self::rank_base::RankBase;

pub mod rank_container;
pub use self::rank_container::RankContainer;

pub mod recovery_stats;
pub use self::recovery_stats::RecoveryStats;

pub mod refresh_stats;
pub use self::refresh_stats::RefreshStats;

pub mod remote_store_download_stats;
pub use self::remote_store_download_stats::RemoteStoreDownloadStats;

pub mod remote_store_stats;
pub use self::remote_store_stats::RemoteStoreStats;

pub mod remote_store_translog_stats;
pub use self::remote_store_translog_stats::RemoteStoreTranslogStats;

pub mod remote_store_translog_upload_stats;
pub use self::remote_store_translog_upload_stats::RemoteStoreTranslogUploadStats;

pub mod remote_store_translog_upload_total_upload_size_stats;
pub use self::remote_store_translog_upload_total_upload_size_stats::RemoteStoreTranslogUploadTotalUploadSizeStats;

pub mod remote_store_translog_upload_total_uploads_stats;
pub use self::remote_store_translog_upload_total_uploads_stats::RemoteStoreTranslogUploadTotalUploadsStats;

pub mod remote_store_upload_download_stats;
pub use self::remote_store_upload_download_stats::RemoteStoreUploadDownloadStats;

pub mod remote_store_upload_pressure_stats;
pub use self::remote_store_upload_pressure_stats::RemoteStoreUploadPressureStats;

pub mod remote_store_upload_refresh_size_lag_stats;
pub use self::remote_store_upload_refresh_size_lag_stats::RemoteStoreUploadRefreshSizeLagStats;

pub mod remote_store_upload_stats;
pub use self::remote_store_upload_stats::RemoteStoreUploadStats;

pub mod request_cache_stats;
pub use self::request_cache_stats::RequestCacheStats;

pub mod request_stats;
pub use self::request_stats::RequestStats;

pub mod resource_stat;
pub use self::resource_stat::ResourceStat;

pub mod resource_stats;
pub use self::resource_stats::ResourceStats;

pub mod retries;
pub use self::retries::Retries;

pub mod score_sort;
pub use self::score_sort::ScoreSort;

pub mod script_base;
pub use self::script_base::ScriptBase;

pub mod script_field;
pub use self::script_field::ScriptField;

pub mod script_sort;
pub use self::script_sort::ScriptSort;

pub mod scrollable_hit_source_search_failure;
pub use self::scrollable_hit_source_search_failure::ScrollableHitSourceSearchFailure;

pub mod scrollable_hit_source_search_failure_value;
pub use self::scrollable_hit_source_search_failure_value::ScrollableHitSourceSearchFailureValue;

pub mod search_stats;
pub use self::search_stats::SearchStats;

pub mod segments_stats;
pub use self::segments_stats::SegmentsStats;

pub mod shard_failure;
pub use self::shard_failure::ShardFailure;

pub mod shard_statistics;
pub use self::shard_statistics::ShardStatistics;

pub mod shards_operation_response_base;
pub use self::shards_operation_response_base::ShardsOperationResponseBase;

pub mod sliced_scroll;
pub use self::sliced_scroll::SlicedScroll;

pub mod store_stats;
pub use self::store_stats::StoreStats;

pub mod stored_script;
pub use self::stored_script::StoredScript;

pub mod task_failure;
pub use self::task_failure::TaskFailure;

pub mod thread_info;
pub use self::thread_info::ThreadInfo;

pub mod top_left_bottom_right_geo_bounds;
pub use self::top_left_bottom_right_geo_bounds::TopLeftBottomRightGeoBounds;

pub mod top_right_bottom_left_geo_bounds;
pub use self::top_right_bottom_left_geo_bounds::TopRightBottomLeftGeoBounds;

pub mod translog_stats;
pub use self::translog_stats::TranslogStats;

pub mod void;
pub use self::void::Void;

pub mod warmer_stats;
pub use self::warmer_stats::WarmerStats;

pub mod wkt_geo_bounds;
pub use self::wkt_geo_bounds::WktGeoBounds;

pub mod write_response_base;
pub use self::write_response_base::WriteResponseBase;

pub mod bulk_by_scroll_failure;
pub use self::bulk_by_scroll_failure::BulkByScrollFailure;

pub mod bulk_by_scroll_task_status_or_exception;
pub use self::bulk_by_scroll_task_status_or_exception::BulkByScrollTaskStatusOrException;

pub mod distance_unit;
pub use self::distance_unit::DistanceUnit;

pub mod field_sort;
pub use self::field_sort::FieldSort;

pub mod geo_bounds;
pub use self::geo_bounds::GeoBounds;

pub mod geo_hash_precision;
pub use self::geo_hash_precision::GeoHashPrecision;

pub mod geo_location;
pub use self::geo_location::GeoLocation;

pub mod wait_for_active_shards;
pub use self::wait_for_active_shards::WaitForActiveShards;

pub mod source;
pub use self::source::Source;

pub mod aggregations;
pub mod analysis;
pub mod mapping;
pub mod query_dsl;

pub mod put_script_request_body_json;
pub use self::put_script_request_body_json::PutScriptRequestBodyJson;

pub mod scripts_painless_execute_response;
pub use self::scripts_painless_execute_response::ScriptsPainlessExecuteResponse;

pub mod rank_eval;
pub use self::rank_eval::RankEval;

pub mod info_response;
pub use self::info_response::InfoResponse;

pub mod render_search_template_response;
pub use self::render_search_template_response::RenderSearchTemplateResponse;

pub mod search_shards_with_index_response;
pub use self::search_shards_with_index_response::SearchShardsWithIndexResponse;

pub mod dict;
pub use self::dict::Dict;

pub mod reindex_request_body_json;
pub use self::reindex_request_body_json::ReindexRequestBodyJson;

pub mod search_template;
pub use self::search_template::SearchTemplate;

pub mod rank_eval_response;
pub use self::rank_eval_response::RankEvalResponse;

pub mod mget_response;
pub use self::mget_response::MgetResponse;

pub mod grouped_by_parents;
pub use self::grouped_by_parents::GroupedByParents;

pub mod render_search_template;
pub use self::render_search_template::RenderSearchTemplate;

pub mod mtermvectors_response;
pub use self::mtermvectors_response::MtermvectorsResponse;

pub mod count_request_body_json;
pub use self::count_request_body_json::CountRequestBodyJson;

pub mod clear_scroll;
pub use self::clear_scroll::ClearScroll;

pub mod get_script_context_response;
pub use self::get_script_context_response::GetScriptContextResponse;

pub mod explain;
pub use self::explain::Explain;

pub mod mtermvectors_request_body_json;
pub use self::mtermvectors_request_body_json::MtermvectorsRequestBodyJson;

pub mod rank_eval_request_body_json;
pub use self::rank_eval_request_body_json::RankEvalRequestBodyJson;

pub mod update_request_body_json;
pub use self::update_request_body_json::UpdateRequestBodyJson;

pub mod reindex_rethrottle_response;
pub use self::reindex_rethrottle_response::ReindexRethrottleResponse;

pub mod clear_scroll_response;
pub use self::clear_scroll_response::ClearScrollResponse;

pub mod track_total_hits;
pub use self::track_total_hits::TrackTotalHits;

pub mod scroll;
pub use self::scroll::Scroll;

pub mod update;
pub use self::update::Update;

pub mod update_by_query_request_body_json;
pub use self::update_by_query_request_body_json::UpdateByQueryRequestBodyJson;

pub mod field_caps_response;
pub use self::field_caps_response::FieldCapsResponse;

pub mod get_script_languages_response;
pub use self::get_script_languages_response::GetScriptLanguagesResponse;

pub mod clear_scroll_not_found_json;
pub use self::clear_scroll_not_found_json::ClearScrollNotFoundJson;

pub mod update_by_query;
pub use self::update_by_query::UpdateByQuery;

pub mod termvectors_request_body_json;
pub use self::termvectors_request_body_json::TermvectorsRequestBodyJson;

pub mod explain_request_body_json;
pub use self::explain_request_body_json::ExplainRequestBodyJson;

pub mod search_with_index;
pub use self::search_with_index::SearchWithIndex;

pub mod search_with_index_request_body_json;
pub use self::search_with_index_request_body_json::SearchWithIndexRequestBodyJson;

pub mod search;
pub use self::search::Search;

pub mod keyed;
pub use self::keyed::Keyed;

pub mod search_request_body_json;
pub use self::search_request_body_json::SearchRequestBodyJson;

pub mod termvectors_response;
pub use self::termvectors_response::TermvectorsResponse;

pub mod scroll_request_body_json;
pub use self::scroll_request_body_json::ScrollRequestBodyJson;

pub mod field_caps_request_body_json;
pub use self::field_caps_request_body_json::FieldCapsRequestBodyJson;

pub mod count;
pub use self::count::Count;

pub mod render_search_template_request_body_json;
pub use self::render_search_template_request_body_json::RenderSearchTemplateRequestBodyJson;

pub mod termvectors;
pub use self::termvectors::Termvectors;

pub mod search_template_with_index;
pub use self::search_template_with_index::SearchTemplateWithIndex;

pub mod count_response;
pub use self::count_response::CountResponse;

pub mod reindex;
pub use self::reindex::Reindex;

pub mod mget;
pub use self::mget::Mget;

pub mod search_template_request_body_json;
pub use self::search_template_request_body_json::SearchTemplateRequestBodyJson;

pub mod search_template_with_index_request_body_json;
pub use self::search_template_with_index_request_body_json::SearchTemplateWithIndexRequestBodyJson;

pub mod scripts_painless_execute;
pub use self::scripts_painless_execute::ScriptsPainlessExecute;

pub mod search_template_with_index_response;
pub use self::search_template_with_index_response::SearchTemplateWithIndexResponse;

pub mod get_source_response;
pub use self::get_source_response::GetSourceResponse;

pub mod delete_by_query;
pub use self::delete_by_query::DeleteByQuery;

pub mod get_script_response;
pub use self::get_script_response::GetScriptResponse;

pub mod clear_scroll_request_body_json;
pub use self::clear_scroll_request_body_json::ClearScrollRequestBodyJson;

pub mod mget_request_body_json;
pub use self::mget_request_body_json::MgetRequestBodyJson;

pub mod search_shards_response;
pub use self::search_shards_response::SearchShardsResponse;

pub mod wait_for_nodes;
pub use self::wait_for_nodes::WaitForNodes;

pub mod field_caps;
pub use self::field_caps::FieldCaps;

pub mod explain_response;
pub use self::explain_response::ExplainResponse;

pub mod full_id;
pub use self::full_id::FullId;

pub mod scripts_painless_execute_request_body_json;
pub use self::scripts_painless_execute_request_body_json::ScriptsPainlessExecuteRequestBodyJson;

pub mod delete_by_query_request_body_json;
pub use self::delete_by_query_request_body_json::DeleteByQueryRequestBodyJson;

pub mod search_template_response;
pub use self::search_template_response::SearchTemplateResponse;

pub mod put_script;
pub use self::put_script::PutScript;

pub mod mtermvectors;
pub use self::mtermvectors::Mtermvectors;

pub mod update_by_query_rethrottle_response;
pub use self::update_by_query_rethrottle_response::UpdateByQueryRethrottleResponse;

pub mod index_request_body_json;
pub use self::index_request_body_json::IndexRequestBodyJson;

pub mod array_or_json;
pub use self::array_or_json::ArrayOrJson;

mod common_api;
pub use self::common_api::*;
