/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Translog {
    #[serde(
        rename = "generation_threshold_size",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub generation_threshold_size: Option<String>,
    #[serde(
        rename = "durability",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub durability: Option<String>,
    #[serde(rename = "retention", default, skip_serializing_if = "Option::is_none")]
    pub retention: Option<indices::TranslogRetention>,
    #[serde(
        rename = "flush_threshold_size",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub flush_threshold_size: Option<String>,
    /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
    /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(
        rename = "sync_interval",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub sync_interval: Option<String>,
}

impl Translog {
    pub fn new() -> Translog {
        Translog {
            generation_threshold_size: None,
            durability: None,
            retention: None,
            flush_threshold_size: None,
            sync_interval: None,
        }
    }
}
