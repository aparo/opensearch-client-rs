/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use crate::indices;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexRoutingAllocation {
    #[serde(rename = "include", default, skip_serializing_if = "Option::is_none")]
    pub include: Option<indices::IndexRoutingAllocationInclude>,
    #[serde(
        rename = "initial_recovery",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub initial_recovery: Option<indices::IndexRoutingAllocationInitialRecovery>,
    /// Certain APIs may return values, including numbers such as epoch timestamps, as strings. This setting captures
    /// this behavior while keeping the semantics of the field type.
    ///
    /// Depending on the target language, code generators can keep the union or remove it and leniently parse
    /// strings to the target type.
    #[serde(
        rename = "total_shards_per_node",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub total_shards_per_node: Option<common::StringifiedInteger>,
    #[serde(rename = "enable", default, skip_serializing_if = "Option::is_none")]
    pub enable: Option<String>,
    #[serde(rename = "disk", default, skip_serializing_if = "Option::is_none")]
    pub disk: Option<indices::IndexRoutingAllocationDisk>,
}

impl IndexRoutingAllocation {
    pub fn new() -> IndexRoutingAllocation {
        IndexRoutingAllocation {
            include: None,
            initial_recovery: None,
            total_shards_per_node: None,
            enable: None,
            disk: None,
        }
    }
}
