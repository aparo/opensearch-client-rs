/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FieldCapsResponse {  /// A comma-separated list of data streams, indexes, and aliases used to limit the request.
  /// Supports wildcards (`*`).
  /// To target all data streams and indexes, omit this parameter or use `*` or `_all`.
    #[serde(rename = "indices")]
    pub indices: common::Indices,
    #[serde(rename = "fields")]
    pub fields: serde_json::Value,
}

impl FieldCapsResponse {
    
    pub fn new(indices: common::Indices, fields: serde_json::Value) -> FieldCapsResponse {
        FieldCapsResponse {
            indices,
            fields,
        }
    }
}
