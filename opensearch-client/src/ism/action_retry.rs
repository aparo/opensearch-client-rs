/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActionRetry {
    #[serde(rename = "count", default, skip_serializing_if = "Option::is_none")]
    pub count: Option<u32>,
    #[serde(rename = "delay", default, skip_serializing_if = "Option::is_none")]
    pub delay: Option<String>,
    #[serde(rename = "backoff", default, skip_serializing_if = "Option::is_none")]
    pub backoff: Option<String>,
}

impl ActionRetry {
    
    pub fn new() -> ActionRetry {
        ActionRetry {
            count: None,
            delay: None,
            backoff: None,
        }
    }
}
