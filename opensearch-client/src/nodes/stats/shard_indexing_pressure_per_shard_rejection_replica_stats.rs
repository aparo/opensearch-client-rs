/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardIndexingPressurePerShardRejectionReplicaStats {
    #[serde(rename = "replica_rejections")]
    pub replica_rejections: u32,
    #[serde(rename = "breakup_shadow_mode", default, skip_serializing_if = "Option::is_none")]
    pub breakup_shadow_mode: Option<nodes::stats::ShardIndexingPressureRejectionsBreakupStats>,
    #[serde(rename = "breakup", default, skip_serializing_if = "Option::is_none")]
    pub breakup: Option<nodes::stats::ShardIndexingPressureRejectionsBreakupStats>,
}

impl ShardIndexingPressurePerShardRejectionReplicaStats {
    
    pub fn new(replica_rejections: u32) -> ShardIndexingPressurePerShardRejectionReplicaStats {
        ShardIndexingPressurePerShardRejectionReplicaStats {
            replica_rejections,
            breakup_shadow_mode: None,
            breakup: None,
        }
    }
}
