/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardIndexingPressureRejectionsBreakupStats {
    #[serde(rename = "no_successful_request_limits", default, skip_serializing_if = "Option::is_none")]
    pub no_successful_request_limits: Option<u32>,
    #[serde(rename = "node_limits", default, skip_serializing_if = "Option::is_none")]
    pub node_limits: Option<u32>,
    #[serde(rename = "throughput_degradation_limits", default, skip_serializing_if = "Option::is_none")]
    pub throughput_degradation_limits: Option<u32>,
}

impl ShardIndexingPressureRejectionsBreakupStats {
    
    pub fn new() -> ShardIndexingPressureRejectionsBreakupStats {
        ShardIndexingPressureRejectionsBreakupStats {
            no_successful_request_limits: None,
            node_limits: None,
            throughput_degradation_limits: None,
        }
    }
}
