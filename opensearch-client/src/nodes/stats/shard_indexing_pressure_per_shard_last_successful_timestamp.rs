/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardIndexingPressurePerShardLastSuccessfulTimestamp {
    #[serde(rename = "replica_last_successful_request_timestamp_in_millis")]
    pub replica_last_successful_request_timestamp_in_millis: String,
    #[serde(rename = "coordinating_last_successful_request_timestamp_in_millis")]
    pub coordinating_last_successful_request_timestamp_in_millis: String,
    #[serde(rename = "primary_last_successful_request_timestamp_in_millis")]
    pub primary_last_successful_request_timestamp_in_millis: String,
}

impl ShardIndexingPressurePerShardLastSuccessfulTimestamp {
    
    pub fn new(replica_last_successful_request_timestamp_in_millis: String, coordinating_last_successful_request_timestamp_in_millis: String, primary_last_successful_request_timestamp_in_millis: String) -> ShardIndexingPressurePerShardLastSuccessfulTimestamp {
        ShardIndexingPressurePerShardLastSuccessfulTimestamp {
            replica_last_successful_request_timestamp_in_millis,
            coordinating_last_successful_request_timestamp_in_millis,
            primary_last_successful_request_timestamp_in_millis,
        }
    }
}
