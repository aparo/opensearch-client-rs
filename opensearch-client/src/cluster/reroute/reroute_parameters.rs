/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RerouteParameters {
    #[serde(rename = "shard")]
    pub shard: u32,
    #[serde(rename = "from_node", default, skip_serializing_if = "Option::is_none")]
    pub from_node: Option<String>,
    #[serde(rename = "index")]
    pub index: String,
    #[serde(rename = "to_node", default, skip_serializing_if = "Option::is_none")]
    pub to_node: Option<String>,
    #[serde(rename = "node")]
    pub node: String,
    #[serde(rename = "allow_primary")]
    pub allow_primary: bool,
}

impl RerouteParameters {
    
    pub fn new(shard: u32, index: String, node: String, allow_primary: bool) -> RerouteParameters {
        RerouteParameters {
            shard,
            from_node: None,
            index,
            to_node: None,
            node,
            allow_primary,
        }
    }
}
