/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */
use crate::common::ArrayOrJson;

pub type AggregateOrder = ArrayOrJson;
pub type BucketsAdjacencyMatrixBucket = ArrayOrJson;
pub type BucketsCompositeBucket = ArrayOrJson;
pub type BucketsDateHistogramBucket = ArrayOrJson;
pub type BucketsDoubleTermsBucket = ArrayOrJson;
pub type BucketsFiltersBucket = ArrayOrJson;
pub type BucketsGeoHashGridBucket = ArrayOrJson;
pub type BucketsGeoTileGridBucket = ArrayOrJson;
pub type BucketsHistogramBucket = ArrayOrJson;
pub type BucketsIpRangeBucket = ArrayOrJson;
pub type BucketsLongRareTermsBucket = ArrayOrJson;
pub type BucketsLongTermsBucket = ArrayOrJson;
pub type BucketsMultiTermsBucket = ArrayOrJson;
pub type BucketsRangeBucket = ArrayOrJson;
pub type BucketsSignificantLongTermsBucket = ArrayOrJson;
pub type BucketsSignificantStringTermsBucket = ArrayOrJson;
pub type BucketsStringRareTermsBucket = ArrayOrJson;
pub type BucketsStringTermsBucket = ArrayOrJson;
pub type BucketsVariableWidthHistogramBucket = ArrayOrJson;
pub type BucketsVoid = ArrayOrJson;

pub mod aggregate_base;
pub use self::aggregate_base::AggregateBase;

pub mod aggregation;
pub use self::aggregation::Aggregation;

pub mod aggregation_range;
pub use self::aggregation_range::AggregationRange;

pub mod array_percentiles_item;
pub use self::array_percentiles_item::ArrayPercentilesItem;

pub mod chi_square_heuristic;
pub use self::chi_square_heuristic::ChiSquareHeuristic;

pub mod classification_inference_options;
pub use self::classification_inference_options::ClassificationInferenceOptions;

pub mod composite_aggregate_key;
pub use self::composite_aggregate_key::CompositeAggregateKey;

pub mod composite_aggregation_source;
pub use self::composite_aggregation_source::CompositeAggregationSource;

pub mod composite_values_source;
pub use self::composite_values_source::CompositeValuesSource;

pub mod date_range_expression;
pub use self::date_range_expression::DateRangeExpression;

pub mod ewma_model_settings;
pub use self::ewma_model_settings::EwmaModelSettings;

pub mod extended_bounds_field_date_math;
pub use self::extended_bounds_field_date_math::ExtendedBoundsFieldDateMath;

pub mod extended_boundsdouble;
pub use self::extended_boundsdouble::ExtendedBoundsdouble;

pub mod geo_line_aggregation;
pub use self::geo_line_aggregation::GeoLineAggregation;

pub mod geo_line_point;
pub use self::geo_line_point::GeoLinePoint;

pub mod geo_line_sort;
pub use self::geo_line_sort::GeoLineSort;

pub mod google_normalized_distance_heuristic;
pub use self::google_normalized_distance_heuristic::GoogleNormalizedDistanceHeuristic;

pub mod hdr_method;
pub use self::hdr_method::HdrMethod;

pub mod histogram_order;
pub use self::histogram_order::HistogramOrder;

pub mod holt_linear_model_settings;
pub use self::holt_linear_model_settings::HoltLinearModelSettings;

pub mod holt_winters_model_settings;
pub use self::holt_winters_model_settings::HoltWintersModelSettings;

pub mod inference_class_importance;
pub use self::inference_class_importance::InferenceClassImportance;

pub mod inference_config_container;
pub use self::inference_config_container::InferenceConfigContainer;

pub mod inference_feature_importance;
pub use self::inference_feature_importance::InferenceFeatureImportance;

pub mod inference_top_class_entry;
pub use self::inference_top_class_entry::InferenceTopClassEntry;

pub mod ip_range_aggregation_range;
pub use self::ip_range_aggregation_range::IpRangeAggregationRange;

pub mod keyed_percentiles;
pub use self::keyed_percentiles::KeyedPercentiles;

pub mod keyed_percentiles_value;
pub use self::keyed_percentiles_value::KeyedPercentilesValue;

pub mod matrix_stats_fields;
pub use self::matrix_stats_fields::MatrixStatsFields;

pub mod metric_aggregation_base;
pub use self::metric_aggregation_base::MetricAggregationBase;

pub mod multi_bucket_base;
pub use self::multi_bucket_base::MultiBucketBase;

pub mod multi_term_lookup;
pub use self::multi_term_lookup::MultiTermLookup;

pub mod mutual_information_heuristic;
pub use self::mutual_information_heuristic::MutualInformationHeuristic;

pub mod percentage_score_heuristic;
pub use self::percentage_score_heuristic::PercentageScoreHeuristic;

pub mod regression_inference_options;
pub use self::regression_inference_options::RegressionInferenceOptions;

pub mod scripted_heuristic;
pub use self::scripted_heuristic::ScriptedHeuristic;

pub mod standard_deviation_bounds;
pub use self::standard_deviation_bounds::StandardDeviationBounds;

pub mod standard_deviation_bounds_as_string;
pub use self::standard_deviation_bounds_as_string::StandardDeviationBoundsAsString;

pub mod t_digest;
pub use self::t_digest::TDigest;

pub mod terms_partition;
pub use self::terms_partition::TermsPartition;

pub mod terms_partition_value;
pub use self::terms_partition_value::TermsPartitionValue;

pub mod test_population;
pub use self::test_population::TestPopulation;

pub mod top_metrics;
pub use self::top_metrics::TopMetrics;

pub mod top_metrics_value;
pub use self::top_metrics_value::TopMetricsValue;

pub mod variable_width_histogram_aggregation;
pub use self::variable_width_histogram_aggregation::VariableWidthHistogramAggregation;

pub mod weighted_average_value;
pub use self::weighted_average_value::WeightedAverageValue;

pub mod aggregate;
pub use self::aggregate::Aggregate;

pub mod buckets_path;
pub use self::buckets_path::BucketsPath;

pub mod buckets_query_container;
pub use self::buckets_query_container::BucketsQueryContainer;

pub mod field_date_math;
pub use self::field_date_math::FieldDateMath;

pub mod holt_winters_type;
pub use self::holt_winters_type::HoltWintersType;

pub mod moving_average_aggregation;
pub use self::moving_average_aggregation::MovingAverageAggregation;

pub mod percentiles;
pub use self::percentiles::Percentiles;

pub mod terms_exclude;
pub use self::terms_exclude::TermsExclude;

pub mod terms_include;
pub use self::terms_include::TermsInclude;
