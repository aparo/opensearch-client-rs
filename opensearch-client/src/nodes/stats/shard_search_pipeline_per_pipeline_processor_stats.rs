/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardSearchPipelinePerPipelineProcessorStats {
    #[serde(rename = "stats", default, skip_serializing_if = "Option::is_none")]
    pub stats: Option<nodes::stats::ShardSearchPipelineOperationStats>,
    #[serde(rename = "type", default, skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl ShardSearchPipelinePerPipelineProcessorStats {
    
    pub fn new() -> ShardSearchPipelinePerPipelineProcessorStats {
        ShardSearchPipelinePerPipelineProcessorStats {
            stats: None,
            r#type: None,
        }
    }
}
