/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterRemoteProxyInfo {
    #[serde(rename = "num_proxy_sockets_connected")]
    pub num_proxy_sockets_connected: u32,
    #[serde(rename = "max_proxy_socket_connections")]
    pub max_proxy_socket_connections: u32,
    #[serde(rename = "connected")]
    pub connected: bool,
    #[serde(rename = "mode")]
    pub mode: String,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "initial_connect_timeout")]
    pub initial_connect_timeout: String,
    #[serde(rename = "skip_unavailable")]
    pub skip_unavailable: bool,
    #[serde(rename = "server_name")]
    pub server_name: String,
    #[serde(rename = "proxy_address")]
    pub proxy_address: String,
}

impl ClusterRemoteProxyInfo {
    
    pub fn new(num_proxy_sockets_connected: u32, max_proxy_socket_connections: u32, connected: bool, mode: String, initial_connect_timeout: String, skip_unavailable: bool, server_name: String, proxy_address: String) -> ClusterRemoteProxyInfo {
        ClusterRemoteProxyInfo {
            num_proxy_sockets_connected,
            max_proxy_socket_connections,
            connected,
            mode,
            initial_connect_timeout,
            skip_unavailable,
            server_name,
            proxy_address,
        }
    }
}
