/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::ml;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolItems {
    #[serde(rename = "include_output_in_agent_response", default, skip_serializing_if = "Option::is_none")]
    pub include_output_in_agent_response: Option<bool>,
    #[serde(rename = "type", default, skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "name", default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "parameters", default, skip_serializing_if = "Option::is_none")]
    pub parameters: Option<ml::Parameters>,
}

impl ToolItems {
    
    pub fn new() -> ToolItems {
        ToolItems {
            include_output_in_agent_response: None,
            r#type: None,
            name: None,
            parameters: None,
        }
    }
}
