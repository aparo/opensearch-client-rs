/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::cluster;
use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComponentTemplateNode {
    #[serde(rename = "version", default, skip_serializing_if = "Option::is_none")]
    pub version: Option<u32>,
    #[serde(rename = "template")]
    pub template: cluster::ComponentTemplateSummary,
    #[serde(rename = "_meta", default, skip_serializing_if = "Option::is_none")]
    pub meta: Option<common::Metadata>,
}

impl ComponentTemplateNode {
    
    pub fn new(template: cluster::ComponentTemplateSummary) -> ComponentTemplateNode {
        ComponentTemplateNode {
            version: None,
            template,
            meta: None,
        }
    }
}
