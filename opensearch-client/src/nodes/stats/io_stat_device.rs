/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoStatDevice {
    #[serde(rename = "io_time_in_millis", default, skip_serializing_if = "Option::is_none")]
    pub io_time_in_millis: Option<String>,  /// The total number of read and write operations for the device completed since starting OpenSearch.
    #[serde(rename = "operations", default, skip_serializing_if = "Option::is_none")]
    pub operations: Option<u32>,
    #[serde(rename = "queue_size", default, skip_serializing_if = "Option::is_none")]
    pub queue_size: Option<u32>,  /// The total number of kilobytes read for the device since starting OpenSearch.
    #[serde(rename = "read_kilobytes", default, skip_serializing_if = "Option::is_none")]
    pub read_kilobytes: Option<u32>,  /// The total number of kilobytes written for the device since starting OpenSearch.
    #[serde(rename = "write_kilobytes", default, skip_serializing_if = "Option::is_none")]
    pub write_kilobytes: Option<u32>,
    #[serde(rename = "read_time", default, skip_serializing_if = "Option::is_none")]
    pub read_time: Option<u32>,  /// The Linux device name.
    #[serde(rename = "device_name", default, skip_serializing_if = "Option::is_none")]
    pub device_name: Option<String>,  /// The total number of read operations for the device completed since starting OpenSearch.
    #[serde(rename = "read_operations", default, skip_serializing_if = "Option::is_none")]
    pub read_operations: Option<u32>,  /// The total number of write operations for the device completed since starting OpenSearch.
    #[serde(rename = "write_operations", default, skip_serializing_if = "Option::is_none")]
    pub write_operations: Option<u32>,
    #[serde(rename = "write_time", default, skip_serializing_if = "Option::is_none")]
    pub write_time: Option<u32>,
}

impl IoStatDevice {
    
    pub fn new() -> IoStatDevice {
        IoStatDevice {
            io_time_in_millis: None,
            operations: None,
            queue_size: None,
            read_kilobytes: None,
            write_kilobytes: None,
            read_time: None,
            device_name: None,
            read_operations: None,
            write_operations: None,
            write_time: None,
        }
    }
}
