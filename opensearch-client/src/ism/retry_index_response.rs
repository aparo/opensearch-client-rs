/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::ism;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RetryIndexResponse {
    #[serde(rename = "updated_indices", default, skip_serializing_if = "Option::is_none")]
    pub updated_indices: Option<f64>,
    #[serde(rename = "failed_indices", default, skip_serializing_if = "Option::is_none")]
    pub failed_indices: Option<Vec<ism::FailedIndex>>,
    #[serde(rename = "failures", default, skip_serializing_if = "Option::is_none")]
    pub failures: Option<bool>,
}

impl RetryIndexResponse {
    
    pub fn new() -> RetryIndexResponse {
        RetryIndexResponse {
            updated_indices: None,
            failed_indices: None,
            failures: None,
        }
    }
}
