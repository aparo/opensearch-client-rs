/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RefreshStats {  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "total_time", default, skip_serializing_if = "Option::is_none")]
    pub total_time: Option<String>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "external_total_time", default, skip_serializing_if = "Option::is_none")]
    pub external_total_time: Option<String>,
    #[serde(rename = "external_total")]
    pub external_total: u32,
    #[serde(rename = "external_total_time_in_millis")]
    pub external_total_time_in_millis: String,
    #[serde(rename = "total_time_in_millis")]
    pub total_time_in_millis: String,
    #[serde(rename = "listeners")]
    pub listeners: u32,
    #[serde(rename = "total")]
    pub total: u32,
}

impl RefreshStats {
    
    pub fn new(external_total: u32, external_total_time_in_millis: String, total_time_in_millis: String, listeners: u32, total: u32) -> RefreshStats {
        RefreshStats {
            total_time: None,
            external_total_time: None,
            external_total,
            external_total_time_in_millis,
            total_time_in_millis,
            listeners,
            total,
        }
    }
}
