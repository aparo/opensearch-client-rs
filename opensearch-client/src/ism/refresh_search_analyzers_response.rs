/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::ism;
use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RefreshSearchAnalyzersResponse {
    #[serde(rename = "_shards", default, skip_serializing_if = "Option::is_none")]
    pub shards: Option<common::ShardStatistics>,
    #[serde(rename = "successful_refresh_details", default, skip_serializing_if = "Option::is_none")]
    pub successful_refresh_details: Option<Vec<ism::RefreshSearchAnalyzersResponseDetails>>,
}

impl RefreshSearchAnalyzersResponse {
    
    pub fn new() -> RefreshSearchAnalyzersResponse {
        RefreshSearchAnalyzersResponse {
            shards: None,
            successful_refresh_details: None,
        }
    }
}
