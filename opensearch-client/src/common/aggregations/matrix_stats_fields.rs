/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatrixStatsFields {
    #[serde(rename = "skewness")]
    pub skewness: f64,  /// The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "correlation")]
    pub correlation: serde_json::Value,
    #[serde(rename = "count")]
    pub count: f64,
    #[serde(rename = "variance")]
    pub variance: f64,
    #[serde(rename = "kurtosis")]
    pub kurtosis: f64,
    #[serde(rename = "mean")]
    pub mean: f64,
    #[serde(rename = "covariance")]
    pub covariance: serde_json::Value,
}

impl MatrixStatsFields {
    
    pub fn new(skewness: f64, name: String, correlation: serde_json::Value, count: f64, variance: f64, kurtosis: f64, mean: f64, covariance: serde_json::Value) -> MatrixStatsFields {
        MatrixStatsFields {
            skewness,
            name,
            correlation,
            count,
            variance,
            kurtosis,
            mean,
            covariance,
        }
    }
}
