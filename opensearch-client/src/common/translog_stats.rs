/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TranslogStats {
    #[serde(rename = "size_in_bytes")]
    pub size_in_bytes: u32,
    #[serde(rename = "uncommitted_operations")]
    pub uncommitted_operations: u32,
    #[serde(rename = "operations")]
    pub operations: u32,
    #[serde(rename = "earliest_last_modified_age")]
    pub earliest_last_modified_age: u32,
    #[serde(rename = "size", default, skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    #[serde(rename = "uncommitted_size", default, skip_serializing_if = "Option::is_none")]
    pub uncommitted_size: Option<String>,
    #[serde(rename = "remote_store", default, skip_serializing_if = "Option::is_none")]
    pub remote_store: Option<common::RemoteStoreTranslogStats>,
    #[serde(rename = "uncommitted_size_in_bytes")]
    pub uncommitted_size_in_bytes: u32,
}

impl TranslogStats {
    
    pub fn new(size_in_bytes: u32, uncommitted_operations: u32, operations: u32, earliest_last_modified_age: u32, uncommitted_size_in_bytes: u32) -> TranslogStats {
        TranslogStats {
            size_in_bytes,
            uncommitted_operations,
            operations,
            earliest_last_modified_age,
            size: None,
            uncommitted_size: None,
            remote_store: None,
            uncommitted_size_in_bytes,
        }
    }
}
