/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataPathStats {  /// Mount point of the file store (for example: `/dev/sda2`).
    #[serde(rename = "mount", default, skip_serializing_if = "Option::is_none")]
    pub mount: Option<String>,  /// Type of the file store (ex: ext4).
    #[serde(rename = "type", default, skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "total", default, skip_serializing_if = "Option::is_none")]
    pub total: Option<String>,
    #[serde(rename = "available", default, skip_serializing_if = "Option::is_none")]
    pub available: Option<String>,  /// Path to the file store.
    #[serde(rename = "path", default, skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    #[serde(rename = "free", default, skip_serializing_if = "Option::is_none")]
    pub free: Option<String>,
    #[serde(rename = "free_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub free_in_bytes: Option<u32>,
    #[serde(rename = "available_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub available_in_bytes: Option<u32>,
    #[serde(rename = "total_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub total_in_bytes: Option<u32>,
}

impl DataPathStats {
    
    pub fn new() -> DataPathStats {
        DataPathStats {
            mount: None,
            r#type: None,
            total: None,
            available: None,
            path: None,
            free: None,
            free_in_bytes: None,
            available_in_bytes: None,
            total_in_bytes: None,
        }
    }
}
