/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use crate::common;
use serde::{Deserialize, Serialize};

/// Mget
/// Document identifiers; can be either `docs` (containing full document information) or `ids` (when index is provided in the URL.


#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mget {
    #[serde(rename = "ids", default, skip_serializing_if = "Option::is_none")]
    pub ids: Option<common::Ids>,  /// The documents you want to retrieve. Required if no index is specified in the request URI.
    #[serde(rename = "docs", default, skip_serializing_if = "Option::is_none")]
    pub docs: Option<Vec<core::mget::Operation>>,
}

impl Mget {
      /// Document identifiers; can be either `docs` (containing full document information) or `ids` (when index is provided in the URL.
    pub fn new() -> Mget {
        Mget {
            ids: None,
            docs: None,
        }
    }
}
