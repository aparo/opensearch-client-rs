/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::ml;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExecuteAnomalyLocalizationResponse {
    #[serde(rename = "result", default, skip_serializing_if = "Option::is_none")]
    pub result: Option<ml::Result>,
    #[serde(rename = "name", default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl ExecuteAnomalyLocalizationResponse {
    
    pub fn new() -> ExecuteAnomalyLocalizationResponse {
        ExecuteAnomalyLocalizationResponse {
            result: None,
            name: None,
        }
    }
}
