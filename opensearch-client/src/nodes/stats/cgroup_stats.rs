/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CgroupStats {
    #[serde(rename = "cpuacct", default, skip_serializing_if = "Option::is_none")]
    pub cpuacct: Option<nodes::stats::CgroupCpuAcctStats>,
    #[serde(rename = "memory", default, skip_serializing_if = "Option::is_none")]
    pub memory: Option<nodes::stats::CgroupMemoryStats>,
    #[serde(rename = "cpu", default, skip_serializing_if = "Option::is_none")]
    pub cpu: Option<nodes::stats::CgroupCpuStats>,
}

impl CgroupStats {
    
    pub fn new() -> CgroupStats {
        CgroupStats {
            cpuacct: None,
            memory: None,
            cpu: None,
        }
    }
}
