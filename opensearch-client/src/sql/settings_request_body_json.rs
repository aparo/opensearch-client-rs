/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::sql;
use serde::{Deserialize, Serialize};




#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum settingsRequestBodyJson {
    
    SqlSettingsPlainValue,
    
    SqlSettingsValue,
}

impl std::fmt::Display for settingsRequestBodyJson {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            
            Self::SqlSettingsPlainValue => write!(f, "0"),
            Self::SqlSettingsValue => write!(f, "0"),
        }
    }
}

impl Default for settingsRequestBodyJson {
    fn default() -> settingsRequestBodyJson {
        
        Self::SqlSettingsPlainValue
    }
}

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum sql::settingsRequestBodyJson {

}

impl Default for sql::settingsRequestBodyJson {
    fn default() -> sql::settingsRequestBodyJson {
        
    }
}

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum sql::settingsRequestBodyJson {

}

impl Default for sql::settingsRequestBodyJson {
    fn default() -> sql::settingsRequestBodyJson {
        
    }
}
