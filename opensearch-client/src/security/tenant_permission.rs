/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TenantPermission {
    #[serde(rename = "allowed_actions", default, skip_serializing_if = "Option::is_none")]
    pub allowed_actions: Option<Vec<String>>,
    #[serde(rename = "tenant_patterns", default, skip_serializing_if = "Option::is_none")]
    pub tenant_patterns: Option<Vec<String>>,
}

impl TenantPermission {
    
    pub fn new() -> TenantPermission {
        TenantPermission {
            allowed_actions: None,
            tenant_patterns: None,
        }
    }
}
