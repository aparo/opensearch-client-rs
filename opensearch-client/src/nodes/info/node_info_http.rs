/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NodeInfoHttp {
    #[serde(rename = "publish_address")]
    pub publish_address: String,
    #[serde(rename = "max_content_length", default, skip_serializing_if = "Option::is_none")]
    pub max_content_length: Option<String>,
    #[serde(rename = "max_content_length_in_bytes")]
    pub max_content_length_in_bytes: u32,
    #[serde(rename = "bound_address")]
    pub bound_address: Vec<String>,
}

impl NodeInfoHttp {
    
    pub fn new(publish_address: String, max_content_length_in_bytes: u32, bound_address: Vec<String>) -> NodeInfoHttp {
        NodeInfoHttp {
            publish_address,
            max_content_length: None,
            max_content_length_in_bytes,
            bound_address,
        }
    }
}
