/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexHealthStats {
    #[serde(rename = "active_shards")]
    pub active_shards: u32,
    #[serde(rename = "active_primary_shards")]
    pub active_primary_shards: u32,
    #[serde(rename = "unassigned_shards")]
    pub unassigned_shards: u32,
    #[serde(rename = "relocating_shards")]
    pub relocating_shards: u32,
    #[serde(rename = "initializing_shards")]
    pub initializing_shards: u32,
    #[serde(rename = "number_of_shards")]
    pub number_of_shards: u32,
    #[serde(rename = "shards", default, skip_serializing_if = "Option::is_none")]
    pub shards: Option<serde_json::Value>,
    #[serde(rename = "status")]
    pub status: common::HealthStatus,
    #[serde(rename = "number_of_replicas")]
    pub number_of_replicas: u32,
}

impl IndexHealthStats {
    
    pub fn new(active_shards: u32, active_primary_shards: u32, unassigned_shards: u32, relocating_shards: u32, initializing_shards: u32, number_of_shards: u32, status: common::HealthStatus, number_of_replicas: u32) -> IndexHealthStats {
        IndexHealthStats {
            active_shards,
            active_primary_shards,
            unassigned_shards,
            relocating_shards,
            initializing_shards,
            number_of_shards,
            shards: None,
            status,
            number_of_replicas,
        }
    }
}
