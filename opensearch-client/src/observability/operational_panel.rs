/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::observability;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OperationalPanel {
    #[serde(rename = "applicationId")]
    pub application_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "queryFilter")]
    pub query_filter: observability::QueryFilter,
    #[serde(rename = "timeRange")]
    pub time_range: observability::TimeRange,
    #[serde(rename = "visualizations")]
    pub visualizations: Vec<observability::Visualization>,
}

impl OperationalPanel {
    
    pub fn new(application_id: String, name: String, query_filter: observability::QueryFilter, time_range: observability::TimeRange, visualizations: Vec<observability::Visualization>) -> OperationalPanel {
        OperationalPanel {
            application_id,
            name,
            query_filter,
            time_range,
            visualizations,
        }
    }
}
