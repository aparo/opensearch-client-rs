/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexMappingRecord {
    #[serde(rename = "item", default, skip_serializing_if = "Option::is_none")]
    pub item: Option<common::mapping::TypeMapping>,
    #[serde(rename = "mappings")]
    pub mappings: common::mapping::TypeMapping,
}

impl IndexMappingRecord {
    pub fn new(mappings: common::mapping::TypeMapping) -> IndexMappingRecord {
        IndexMappingRecord {
            item: None,
            mappings,
        }
    }
}
