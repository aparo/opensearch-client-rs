/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BulkByScrollTaskStatus {  /// The number of requests per second effectively executed during the reindex operation.
    #[serde(rename = "requests_per_second")]
    pub requests_per_second: f64,  /// The number of documents that were successfully processed.
    #[serde(rename = "total")]
    pub total: u32,  /// The number of documents that were successfully deleted.
    #[serde(rename = "deleted")]
    pub deleted: u32,  /// The number of documents that were successfully updated after the reindex operation.
    #[serde(rename = "updated", default, skip_serializing_if = "Option::is_none")]
    pub updated: Option<u32>,  /// The number of documents that were successfully created.
    #[serde(rename = "created", default, skip_serializing_if = "Option::is_none")]
    pub created: Option<u32>,
    #[serde(rename = "retries")]
    pub retries: common::Retries,  /// The number of version conflicts encountered by the reindex operation.
    #[serde(rename = "version_conflicts")]
    pub version_conflicts: u32,
    #[serde(rename = "canceled", default, skip_serializing_if = "Option::is_none")]
    pub canceled: Option<String>,
    #[serde(rename = "throttled_millis")]
    pub throttled_millis: String,
    #[serde(rename = "throttled_until_millis")]
    pub throttled_until_millis: String,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "throttled", default, skip_serializing_if = "Option::is_none")]
    pub throttled: Option<String>,  /// The number of scroll responses pulled back by the reindex operation.
    #[serde(rename = "batches")]
    pub batches: u32,  /// The number of documents that were ignored.
    #[serde(rename = "noops")]
    pub noops: u32,
    #[serde(rename = "slice_id", default, skip_serializing_if = "Option::is_none")]
    pub slice_id: Option<u32>,
    #[serde(rename = "slices", default, skip_serializing_if = "Option::is_none")]
    pub slices: Option<Vec<common::BulkByScrollTaskStatusOrException>>,  /// A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and
  /// `d` (days). Also accepts "0" without a unit and "-1" to indicate an unspecified value.
    #[serde(rename = "throttled_until", default, skip_serializing_if = "Option::is_none")]
    pub throttled_until: Option<String>,
}

impl BulkByScrollTaskStatus {
    
    pub fn new(requests_per_second: f64, total: u32, deleted: u32, retries: common::Retries, version_conflicts: u32, throttled_millis: String, throttled_until_millis: String, batches: u32, noops: u32) -> BulkByScrollTaskStatus {
        BulkByScrollTaskStatus {
            requests_per_second,
            total,
            deleted,
            updated: None,
            created: None,
            retries,
            version_conflicts,
            canceled: None,
            throttled_millis,
            throttled_until_millis,
            throttled: None,
            batches,
            noops,
            slice_id: None,
            slices: None,
            throttled_until: None,
        }
    }
}
