/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RemoveIndexAction {  /// If `true`, the alias must exist to perform the action.
    #[serde(rename = "must_exist", default, skip_serializing_if = "Option::is_none")]
    pub must_exist: Option<bool>,
    #[serde(rename = "index", default, skip_serializing_if = "Option::is_none")]
    pub index: Option<String>,  /// A comma-separated list of data streams, indexes, and aliases used to limit the request.
  /// Supports wildcards (`*`).
  /// To target all data streams and indexes, omit this parameter or use `*` or `_all`.
    #[serde(rename = "indices", default, skip_serializing_if = "Option::is_none")]
    pub indices: Option<common::Indices>,
}

impl RemoveIndexAction {
    
    pub fn new() -> RemoveIndexAction {
        RemoveIndexAction {
            must_exist: None,
            index: None,
            indices: None,
        }
    }
}
