/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NestedIdentity {
    #[serde(rename = "offset")]
    pub offset: u32,
    #[serde(rename = "_nested", default, skip_serializing_if = "Option::is_none")]
    pub nested: Option<Box<core::search::NestedIdentity>>,
    /// The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
    #[serde(rename = "field")]
    pub field: String,
}

impl NestedIdentity {
    pub fn new(offset: u32, field: String) -> NestedIdentity {
        NestedIdentity {
            offset,
            nested: None,
            field,
        }
    }
}
