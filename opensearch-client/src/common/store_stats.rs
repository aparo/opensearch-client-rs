/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StoreStats {
    #[serde(rename = "size_in_bytes")]
    pub size_in_bytes: u32,
    #[serde(rename = "size", default, skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    #[serde(rename = "reserved_in_bytes")]
    pub reserved_in_bytes: u32,
    #[serde(rename = "reserved", default, skip_serializing_if = "Option::is_none")]
    pub reserved: Option<String>,
}

impl StoreStats {
    
    pub fn new(size_in_bytes: u32, reserved_in_bytes: u32) -> StoreStats {
        StoreStats {
            size_in_bytes,
            size: None,
            reserved_in_bytes,
            reserved: None,
        }
    }
}
