/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RequestCacheStats {
    #[serde(rename = "evictions")]
    pub evictions: u32,
    #[serde(rename = "hit_count")]
    pub hit_count: u32,
    #[serde(rename = "memory_size_in_bytes")]
    pub memory_size_in_bytes: u32,
    #[serde(rename = "miss_count")]
    pub miss_count: u32,
    #[serde(rename = "memory_size", default, skip_serializing_if = "Option::is_none")]
    pub memory_size: Option<String>,
}

impl RequestCacheStats {
    
    pub fn new(evictions: u32, hit_count: u32, memory_size_in_bytes: u32, miss_count: u32) -> RequestCacheStats {
        RequestCacheStats {
            evictions,
            hit_count,
            memory_size_in_bytes,
            miss_count,
            memory_size: None,
        }
    }
}
