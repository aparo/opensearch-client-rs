/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AliasDefinition {
    /// If `true`, the alias is hidden.
    /// All indexes for the alias must have the same `is_hidden` value.
    #[serde(rename = "is_hidden", default, skip_serializing_if = "Option::is_none")]
    pub is_hidden: Option<bool>,
    #[serde(rename = "filter", default, skip_serializing_if = "Option::is_none")]
    pub filter: Option<crate::dsl::Query>,
    /// If `true`, the index is the write index for the alias.
    #[serde(
        rename = "is_write_index",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub is_write_index: Option<bool>,
    /// Value used to route indexing and search operations to a specific shard.
    #[serde(rename = "routing", default, skip_serializing_if = "Option::is_none")]
    pub routing: Option<String>,
    /// Value used to route indexing operations to a specific shard.
    /// If specified, this overwrites the `routing` value for indexing operations.
    #[serde(
        rename = "index_routing",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub index_routing: Option<String>,
    /// Value used to route search operations to a specific shard.
    /// If specified, this overwrites the `routing` value for search operations.
    #[serde(
        rename = "search_routing",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub search_routing: Option<String>,
}
