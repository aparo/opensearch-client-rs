/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};

/// RankEval
/// The ranking evaluation search definition, including search requests, document ratings and ranking metric definition.


#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RankEval {  /// A set of typical search requests, together with their provided ratings.
    #[serde(rename = "requests")]
    pub requests: Vec<core::rank_eval::RankEvalRequestItem>,
    #[serde(rename = "metric", default, skip_serializing_if = "Option::is_none")]
    pub metric: Option<core::rank_eval::RankEvalMetric>,
}

impl RankEval {
      /// The ranking evaluation search definition, including search requests, document ratings and ranking metric definition.
    pub fn new(requests: Vec<core::rank_eval::RankEvalRequestItem>) -> RankEval {
        RankEval {
            requests,
            metric: None,
        }
    }
}
