/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SnapshotShardFailure {
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "node_id", default, skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
    #[serde(rename = "shard_id")]
    pub shard_id: String,
    #[serde(rename = "index")]
    pub index: String,
}

impl SnapshotShardFailure {
    
    pub fn new(status: String, reason: String, shard_id: String, index: String) -> SnapshotShardFailure {
        SnapshotShardFailure {
            status,
            reason,
            node_id: None,
            shard_id,
            index,
        }
    }
}
