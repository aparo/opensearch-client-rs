/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetScriptLanguagesResponse {
    #[serde(rename = "language_contexts")]
    pub language_contexts: Vec<core::get_script_languages::LanguageContext>,
    #[serde(rename = "types_allowed")]
    pub types_allowed: Vec<String>,
}

impl GetScriptLanguagesResponse {
    
    pub fn new(language_contexts: Vec<core::get_script_languages::LanguageContext>, types_allowed: Vec<String>) -> GetScriptLanguagesResponse {
        GetScriptLanguagesResponse {
            language_contexts,
            types_allowed,
        }
    }
}
