/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexingPressureMemory {
    #[serde(rename = "current", default, skip_serializing_if = "Option::is_none")]
    pub current: Option<nodes::stats::PressureMemory>,
    #[serde(rename = "limit_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub limit_in_bytes: Option<u32>,
    #[serde(rename = "limit", default, skip_serializing_if = "Option::is_none")]
    pub limit: Option<String>,
    #[serde(rename = "total", default, skip_serializing_if = "Option::is_none")]
    pub total: Option<nodes::stats::PressureMemory>,
}

impl IndexingPressureMemory {
    
    pub fn new() -> IndexingPressureMemory {
        IndexingPressureMemory {
            current: None,
            limit_in_bytes: None,
            limit: None,
            total: None,
        }
    }
}
