/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MovingAverageAggregation {
    SimpleMovingAverageAggregationValue,

    LinearMovingAverageAggregationValue,

    HoltMovingAverageAggregationValue,

    HoltWintersMovingAverageAggregationValue,

    EwmaMovingAverageAggregationValue,
}

impl std::fmt::Display for MovingAverageAggregation {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::SimpleMovingAverageAggregationValue => write!(f, "0"),
            Self::LinearMovingAverageAggregationValue => write!(f, "0"),
            Self::HoltMovingAverageAggregationValue => write!(f, "0"),
            Self::HoltWintersMovingAverageAggregationValue => write!(f, "0"),
            Self::EwmaMovingAverageAggregationValue => write!(f, "0"),
        }
    }
}

impl Default for MovingAverageAggregation {
    fn default() -> MovingAverageAggregation {
        Self::SimpleMovingAverageAggregationValue
    }
}
