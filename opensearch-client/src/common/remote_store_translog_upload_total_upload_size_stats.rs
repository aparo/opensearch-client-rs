/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};

/// RemoteStoreTranslogUploadTotalUploadSizeStats
/// The total amount of data uploaded to the remote translog store.


#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RemoteStoreTranslogUploadTotalUploadSizeStats {
    #[serde(rename = "failed_bytes")]
    pub failed_bytes: u32,
    #[serde(rename = "failed", default, skip_serializing_if = "Option::is_none")]
    pub failed: Option<String>,
    #[serde(rename = "started", default, skip_serializing_if = "Option::is_none")]
    pub started: Option<String>,
    #[serde(rename = "succeeded", default, skip_serializing_if = "Option::is_none")]
    pub succeeded: Option<String>,
    #[serde(rename = "started_bytes")]
    pub started_bytes: u32,
    #[serde(rename = "succeeded_bytes")]
    pub succeeded_bytes: u32,
}

impl RemoteStoreTranslogUploadTotalUploadSizeStats {
      /// The total amount of data uploaded to the remote translog store.
    pub fn new(failed_bytes: u32, started_bytes: u32, succeeded_bytes: u32) -> RemoteStoreTranslogUploadTotalUploadSizeStats {
        RemoteStoreTranslogUploadTotalUploadSizeStats {
            failed_bytes,
            failed: None,
            started: None,
            succeeded: None,
            started_bytes,
            succeeded_bytes,
        }
    }
}
