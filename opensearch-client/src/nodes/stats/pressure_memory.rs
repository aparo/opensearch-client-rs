/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PressureMemory {
    #[serde(rename = "primary_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub primary_in_bytes: Option<u32>,
    #[serde(rename = "combined_coordinating_and_primary_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub combined_coordinating_and_primary_in_bytes: Option<u32>,  /// Number of indexing requests rejected in the replica stage.
    #[serde(rename = "replica_rejections", default, skip_serializing_if = "Option::is_none")]
    pub replica_rejections: Option<u32>,
    #[serde(rename = "replica_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub replica_in_bytes: Option<u32>,
    #[serde(rename = "replica", default, skip_serializing_if = "Option::is_none")]
    pub replica: Option<String>,  /// Number of indexing requests rejected in the primary stage.
    #[serde(rename = "primary_rejections", default, skip_serializing_if = "Option::is_none")]
    pub primary_rejections: Option<u32>,  /// Number of indexing requests rejected in the coordinating stage.
    #[serde(rename = "coordinating_rejections", default, skip_serializing_if = "Option::is_none")]
    pub coordinating_rejections: Option<u32>,
    #[serde(rename = "combined_coordinating_and_primary", default, skip_serializing_if = "Option::is_none")]
    pub combined_coordinating_and_primary: Option<String>,
    #[serde(rename = "coordinating_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub coordinating_in_bytes: Option<u32>,
    #[serde(rename = "all_in_bytes", default, skip_serializing_if = "Option::is_none")]
    pub all_in_bytes: Option<u32>,
    #[serde(rename = "primary", default, skip_serializing_if = "Option::is_none")]
    pub primary: Option<String>,
    #[serde(rename = "all", default, skip_serializing_if = "Option::is_none")]
    pub all: Option<String>,
    #[serde(rename = "coordinating", default, skip_serializing_if = "Option::is_none")]
    pub coordinating: Option<String>,
}

impl PressureMemory {
    
    pub fn new() -> PressureMemory {
        PressureMemory {
            primary_in_bytes: None,
            combined_coordinating_and_primary_in_bytes: None,
            replica_rejections: None,
            replica_in_bytes: None,
            replica: None,
            primary_rejections: None,
            coordinating_rejections: None,
            combined_coordinating_and_primary: None,
            coordinating_in_bytes: None,
            all_in_bytes: None,
            primary: None,
            all: None,
            coordinating: None,
        }
    }
}
