/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::notifications;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotificationsConfigsOutputItem {
    #[serde(rename = "created_time_ms", default, skip_serializing_if = "Option::is_none")]
    pub created_time_ms: Option<u32>,
    #[serde(rename = "config_id", default, skip_serializing_if = "Option::is_none")]
    pub config_id: Option<String>,
    #[serde(rename = "config", default, skip_serializing_if = "Option::is_none")]
    pub config: Option<notifications::NotificationsConfigItem>,
    #[serde(rename = "last_updated_time_ms", default, skip_serializing_if = "Option::is_none")]
    pub last_updated_time_ms: Option<u32>,
}

impl NotificationsConfigsOutputItem {
    
    pub fn new() -> NotificationsConfigsOutputItem {
        NotificationsConfigsOutputItem {
            created_time_ms: None,
            config_id: None,
            config: None,
            last_updated_time_ms: None,
        }
    }
}
