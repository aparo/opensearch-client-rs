/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardIndexingPressurePerShardRejectionStats {
    #[serde(rename = "primary")]
    pub primary: nodes::stats::ShardIndexingPressurePerShardRejectionPrimaryStats,
    #[serde(rename = "replica")]
    pub replica: nodes::stats::ShardIndexingPressurePerShardRejectionReplicaStats,
    #[serde(rename = "coordinating")]
    pub coordinating: nodes::stats::ShardIndexingPressurePerShardRejectionCoordinatingStats,
}

impl ShardIndexingPressurePerShardRejectionStats {
    
    pub fn new(primary: nodes::stats::ShardIndexingPressurePerShardRejectionPrimaryStats, replica: nodes::stats::ShardIndexingPressurePerShardRejectionReplicaStats, coordinating: nodes::stats::ShardIndexingPressurePerShardRejectionCoordinatingStats) -> ShardIndexingPressurePerShardRejectionStats {
        ShardIndexingPressurePerShardRejectionStats {
            primary,
            replica,
            coordinating,
        }
    }
}
