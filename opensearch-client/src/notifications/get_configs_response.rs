/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::notifications;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetConfigsResponse {
    #[serde(rename = "total_hit_relation", default, skip_serializing_if = "Option::is_none")]
    pub total_hit_relation: Option<String>,
    #[serde(rename = "start_index", default, skip_serializing_if = "Option::is_none")]
    pub start_index: Option<u32>,
    #[serde(rename = "total_hits", default, skip_serializing_if = "Option::is_none")]
    pub total_hits: Option<u32>,
    #[serde(rename = "config_list", default, skip_serializing_if = "Option::is_none")]
    pub config_list: Option<Vec<notifications::NotificationsConfigsOutputItem>>,
}

impl GetConfigsResponse {
    
    pub fn new() -> GetConfigsResponse {
        GetConfigsResponse {
            total_hit_relation: None,
            start_index: None,
            total_hits: None,
            config_list: None,
        }
    }
}
