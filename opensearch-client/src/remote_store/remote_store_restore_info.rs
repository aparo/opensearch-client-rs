/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::remote_store;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RemoteStoreRestoreInfo {
    #[serde(rename = "snapshot", default, skip_serializing_if = "Option::is_none")]
    pub snapshot: Option<String>,
    #[serde(rename = "indices", default, skip_serializing_if = "Option::is_none")]
    pub indices: Option<Vec<String>>,
    #[serde(rename = "shards", default, skip_serializing_if = "Option::is_none")]
    pub shards: Option<remote_store::RemoteStoreRestoreShardsInfo>,
}

impl RemoteStoreRestoreInfo {
    
    pub fn new() -> RemoteStoreRestoreInfo {
        RemoteStoreRestoreInfo {
            snapshot: None,
            indices: None,
            shards: None,
        }
    }
}
