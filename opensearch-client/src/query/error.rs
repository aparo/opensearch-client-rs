/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::query;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Error {
    #[serde(rename = "root_cause")]
    pub root_cause: Vec<query::RootCause>,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "reason")]
    pub reason: String,
}

impl Error {
    
    pub fn new(root_cause: Vec<query::RootCause>, r#type: String, reason: String) -> Error {
        Error {
            root_cause,
            r#type,
            reason,
        }
    }
}
