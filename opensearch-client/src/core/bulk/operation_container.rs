/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OperationContainer {
    #[serde(rename = "index", default, skip_serializing_if = "Option::is_none")]
    pub index: Option<String>,
    #[serde(rename = "create", default, skip_serializing_if = "Option::is_none")]
    pub create: Option<String>,
    #[serde(rename = "update", default, skip_serializing_if = "Option::is_none")]
    pub update: Option<String>,
    #[serde(rename = "delete", default, skip_serializing_if = "Option::is_none")]
    pub delete: Option<core::bulk::DeleteOperation>,
}

impl OperationContainer {
    
    pub fn new() -> OperationContainer {
        OperationContainer {
            index: None,
            create: None,
            update: None,
            delete: None,
        }
    }
}
