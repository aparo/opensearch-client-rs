/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShardSearchPipelineStats {
    #[serde(rename = "pipelines", default, skip_serializing_if = "Option::is_none")]
    pub pipelines: Option<serde_json::Value>,
    #[serde(rename = "total_request", default, skip_serializing_if = "Option::is_none")]
    pub total_request: Option<nodes::stats::ShardSearchPipelineOperationStats>,
    #[serde(rename = "total_response", default, skip_serializing_if = "Option::is_none")]
    pub total_response: Option<nodes::stats::ShardSearchPipelineOperationStats>,
}

impl ShardSearchPipelineStats {
    
    pub fn new() -> ShardSearchPipelineStats {
        ShardSearchPipelineStats {
            pipelines: None,
            total_request: None,
            total_response: None,
        }
    }
}
