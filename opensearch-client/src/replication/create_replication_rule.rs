/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::replication;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateReplicationRule {
    #[serde(rename = "leader_alias", default, skip_serializing_if = "Option::is_none")]
    pub leader_alias: Option<String>,
    #[serde(rename = "use_roles", default, skip_serializing_if = "Option::is_none")]
    pub use_roles: Option<replication::UseRoles>,
    #[serde(rename = "name", default, skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "pattern", default, skip_serializing_if = "Option::is_none")]
    pub pattern: Option<String>,
}

impl CreateReplicationRule {
    
    pub fn new() -> CreateReplicationRule {
        CreateReplicationRule {
            leader_alias: None,
            use_roles: None,
            name: None,
            pattern: None,
        }
    }
}
