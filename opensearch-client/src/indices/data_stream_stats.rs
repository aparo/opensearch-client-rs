/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataStreamStats {
    #[serde(rename = "data_stream")]
    pub data_stream: String,
    #[serde(rename = "store_size_bytes")]
    pub store_size_bytes: u32,
    #[serde(rename = "maximum_timestamp")]
    pub maximum_timestamp: String,
    /// Current number of backing indexes for the data stream.
    #[serde(rename = "backing_indices")]
    pub backing_indices: u32,
    #[serde(
        rename = "store_size",
        default,
        skip_serializing_if = "Option::is_none"
    )]
    pub store_size: Option<String>,
}

impl DataStreamStats {
    pub fn new(
        data_stream: String,
        store_size_bytes: u32,
        maximum_timestamp: String,
        backing_indices: u32,
    ) -> DataStreamStats {
        DataStreamStats {
            data_stream,
            store_size_bytes,
            maximum_timestamp,
            backing_indices,
            store_size: None,
        }
    }
}
