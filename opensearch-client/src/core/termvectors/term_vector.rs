/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::core;
use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TermVector {
    #[serde(rename = "field_statistics", default, skip_serializing_if = "Option::is_none")]
    pub field_statistics: Option<core::termvectors::FieldStatistics>,
    #[serde(rename = "terms")]
    pub terms: serde_json::Value,
}

impl TermVector {
    
    pub fn new(terms: serde_json::Value) -> TermVector {
        TermVector {
            field_statistics: None,
            terms,
        }
    }
}
