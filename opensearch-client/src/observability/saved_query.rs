/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::observability;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SavedQuery {
    #[serde(rename = "selected_fields")]
    pub selected_fields: observability::SelectedFields,
    #[serde(rename = "query")]
    pub query: String,
    #[serde(rename = "selected_date_range")]
    pub selected_date_range: observability::SelectedDateRange,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "selected_timestamp")]
    pub selected_timestamp: observability::SelectedTimestamp,
    #[serde(rename = "name")]
    pub name: String,
}

impl SavedQuery {
    
    pub fn new(selected_fields: observability::SelectedFields, query: String, selected_date_range: observability::SelectedDateRange, description: String, selected_timestamp: observability::SelectedTimestamp, name: String) -> SavedQuery {
        SavedQuery {
            selected_fields,
            query,
            selected_date_range,
            description,
            selected_timestamp,
            name,
        }
    }
}
