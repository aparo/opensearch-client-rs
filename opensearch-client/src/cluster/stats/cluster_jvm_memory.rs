/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterJvmMemory {
    #[serde(rename = "heap_max", default, skip_serializing_if = "Option::is_none")]
    pub heap_max: Option<String>,
    #[serde(rename = "heap_max_in_bytes")]
    pub heap_max_in_bytes: u32,
    #[serde(rename = "heap_used", default, skip_serializing_if = "Option::is_none")]
    pub heap_used: Option<String>,
    #[serde(rename = "heap_used_in_bytes")]
    pub heap_used_in_bytes: u32,
}

impl ClusterJvmMemory {
    
    pub fn new(heap_max_in_bytes: u32, heap_used_in_bytes: u32) -> ClusterJvmMemory {
        ClusterJvmMemory {
            heap_max: None,
            heap_max_in_bytes,
            heap_used: None,
            heap_used_in_bytes,
        }
    }
}
