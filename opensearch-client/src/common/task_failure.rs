/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::common;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TaskFailure {
    #[serde(rename = "task_id")]
    pub task_id: u32,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "reason")]
    pub reason: common::ErrorCause,
    #[serde(rename = "node_id")]
    pub node_id: String,
}

impl TaskFailure {
    
    pub fn new(task_id: u32, status: String, reason: common::ErrorCause, node_id: String) -> TaskFailure {
        TaskFailure {
            task_id,
            status,
            reason,
            node_id,
        }
    }
}
