/*
 * opensearch-client
 *
 * Rust Client for OpenSearch
 *
 * The version of the OpenAPI document: 3.1.0
 * Contact: alberto.paro@gmail.com
 * Generated by Paro OpenAPI Generator
 */

use crate::nodes;
use serde::{Deserialize, Serialize};




#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Discovery {
    #[serde(rename = "cluster_state_queue", default, skip_serializing_if = "Option::is_none")]
    pub cluster_state_queue: Option<nodes::stats::ClusterStateQueue>,
    #[serde(rename = "cluster_state_stats", default, skip_serializing_if = "Option::is_none")]
    pub cluster_state_stats: Option<nodes::stats::ClusterStateStats>,
    #[serde(rename = "published_cluster_states", default, skip_serializing_if = "Option::is_none")]
    pub published_cluster_states: Option<nodes::stats::PublishedClusterStates>,
}

impl Discovery {
    
    pub fn new() -> Discovery {
        Discovery {
            cluster_state_queue: None,
            cluster_state_stats: None,
            published_cluster_states: None,
        }
    }
}
